#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace db_crociere
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbCrociere")]
	public partial class DataClassesDBCrociereDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertALLOGGI(ALLOGGI instance);
    partial void UpdateALLOGGI(ALLOGGI instance);
    partial void DeleteALLOGGI(ALLOGGI instance);
    partial void InsertTURNI_LAVORATIVI(TURNI_LAVORATIVI instance);
    partial void UpdateTURNI_LAVORATIVI(TURNI_LAVORATIVI instance);
    partial void DeleteTURNI_LAVORATIVI(TURNI_LAVORATIVI instance);
    partial void InsertANNULLAMENTI(ANNULLAMENTI instance);
    partial void UpdateANNULLAMENTI(ANNULLAMENTI instance);
    partial void DeleteANNULLAMENTI(ANNULLAMENTI instance);
    partial void InsertATTIVITÀ(ATTIVITÀ instance);
    partial void UpdateATTIVITÀ(ATTIVITÀ instance);
    partial void DeleteATTIVITÀ(ATTIVITÀ instance);
    partial void InsertBADGE(BADGE instance);
    partial void UpdateBADGE(BADGE instance);
    partial void DeleteBADGE(BADGE instance);
    partial void InsertCABINE(CABINE instance);
    partial void UpdateCABINE(CABINE instance);
    partial void DeleteCABINE(CABINE instance);
    partial void InsertESECUZIONI_TRATTA(ESECUZIONI_TRATTA instance);
    partial void UpdateESECUZIONI_TRATTA(ESECUZIONI_TRATTA instance);
    partial void DeleteESECUZIONI_TRATTA(ESECUZIONI_TRATTA instance);
    partial void InsertNAVI(NAVI instance);
    partial void UpdateNAVI(NAVI instance);
    partial void DeleteNAVI(NAVI instance);
    partial void InsertNAVIGAZIONI(NAVIGAZIONI instance);
    partial void UpdateNAVIGAZIONI(NAVIGAZIONI instance);
    partial void DeleteNAVIGAZIONI(NAVIGAZIONI instance);
    partial void InsertPAGAMENTI(PAGAMENTI instance);
    partial void UpdatePAGAMENTI(PAGAMENTI instance);
    partial void DeletePAGAMENTI(PAGAMENTI instance);
    partial void InsertPASSEGGERI(PASSEGGERI instance);
    partial void UpdatePASSEGGERI(PASSEGGERI instance);
    partial void DeletePASSEGGERI(PASSEGGERI instance);
    partial void InsertPERCORSI(PERCORSI instance);
    partial void UpdatePERCORSI(PERCORSI instance);
    partial void DeletePERCORSI(PERCORSI instance);
    partial void InsertPERSONALE(PERSONALE instance);
    partial void UpdatePERSONALE(PERSONALE instance);
    partial void DeletePERSONALE(PERSONALE instance);
    partial void InsertPONTI(PONTI instance);
    partial void UpdatePONTI(PONTI instance);
    partial void DeletePONTI(PONTI instance);
    partial void InsertPORTI(PORTI instance);
    partial void UpdatePORTI(PORTI instance);
    partial void DeletePORTI(PORTI instance);
    partial void InsertPRENOTAZIONI(PRENOTAZIONI instance);
    partial void UpdatePRENOTAZIONI(PRENOTAZIONI instance);
    partial void DeletePRENOTAZIONI(PRENOTAZIONI instance);
    partial void InsertPRENOTAZIONI_PASSEGGERI(PRENOTAZIONI_PASSEGGERI instance);
    partial void UpdatePRENOTAZIONI_PASSEGGERI(PRENOTAZIONI_PASSEGGERI instance);
    partial void DeletePRENOTAZIONI_PASSEGGERI(PRENOTAZIONI_PASSEGGERI instance);
    partial void InsertPROGRAMMAZIONI(PROGRAMMAZIONI instance);
    partial void UpdatePROGRAMMAZIONI(PROGRAMMAZIONI instance);
    partial void DeletePROGRAMMAZIONI(PROGRAMMAZIONI instance);
    partial void InsertRATE(RATE instance);
    partial void UpdateRATE(RATE instance);
    partial void DeleteRATE(RATE instance);
    partial void InsertRESPONSABILITÀ(RESPONSABILITÀ instance);
    partial void UpdateRESPONSABILITÀ(RESPONSABILITÀ instance);
    partial void DeleteRESPONSABILITÀ(RESPONSABILITÀ instance);
    partial void InsertRIMBORSI(RIMBORSI instance);
    partial void UpdateRIMBORSI(RIMBORSI instance);
    partial void DeleteRIMBORSI(RIMBORSI instance);
    partial void InsertRUOLI(RUOLI instance);
    partial void UpdateRUOLI(RUOLI instance);
    partial void DeleteRUOLI(RUOLI instance);
    partial void InsertSALE(SALE instance);
    partial void UpdateSALE(SALE instance);
    partial void DeleteSALE(SALE instance);
    partial void InsertSCIALUPPE(SCIALUPPE instance);
    partial void UpdateSCIALUPPE(SCIALUPPE instance);
    partial void DeleteSCIALUPPE(SCIALUPPE instance);
    partial void InsertSEQUENZE_TRATTE(SEQUENZE_TRATTE instance);
    partial void UpdateSEQUENZE_TRATTE(SEQUENZE_TRATTE instance);
    partial void DeleteSEQUENZE_TRATTE(SEQUENZE_TRATTE instance);
    partial void InsertSERVIZI(SERVIZI instance);
    partial void UpdateSERVIZI(SERVIZI instance);
    partial void DeleteSERVIZI(SERVIZI instance);
    partial void InsertSPESE_EXTRA(SPESE_EXTRA instance);
    partial void UpdateSPESE_EXTRA(SPESE_EXTRA instance);
    partial void DeleteSPESE_EXTRA(SPESE_EXTRA instance);
    partial void InsertTARIFFARI(TARIFFARI instance);
    partial void UpdateTARIFFARI(TARIFFARI instance);
    partial void DeleteTARIFFARI(TARIFFARI instance);
    partial void InsertTARIFFARI_PRENOTAZIONI(TARIFFARI_PRENOTAZIONI instance);
    partial void UpdateTARIFFARI_PRENOTAZIONI(TARIFFARI_PRENOTAZIONI instance);
    partial void DeleteTARIFFARI_PRENOTAZIONI(TARIFFARI_PRENOTAZIONI instance);
    partial void InsertTIPOLOGIE(TIPOLOGIE instance);
    partial void UpdateTIPOLOGIE(TIPOLOGIE instance);
    partial void DeleteTIPOLOGIE(TIPOLOGIE instance);
    partial void InsertTRATTE(TRATTE instance);
    partial void UpdateTRATTE(TRATTE instance);
    partial void DeleteTRATTE(TRATTE instance);
    #endregion
		
		public DataClassesDBCrociereDataContext() : 
				base(global::db_crociere.Properties.Settings.Default.dbCrociereConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDBCrociereDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDBCrociereDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDBCrociereDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDBCrociereDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ALLOGGI> ALLOGGIs
		{
			get
			{
				return this.GetTable<ALLOGGI>();
			}
		}
		
		public System.Data.Linq.Table<TURNI_LAVORATIVI> TURNI_LAVORATIVIs
		{
			get
			{
				return this.GetTable<TURNI_LAVORATIVI>();
			}
		}
		
		public System.Data.Linq.Table<ANNULLAMENTI> ANNULLAMENTIs
		{
			get
			{
				return this.GetTable<ANNULLAMENTI>();
			}
		}
		
		public System.Data.Linq.Table<ATTIVITÀ> ATTIVITÀs
		{
			get
			{
				return this.GetTable<ATTIVITÀ>();
			}
		}
		
		public System.Data.Linq.Table<BADGE> BADGEs
		{
			get
			{
				return this.GetTable<BADGE>();
			}
		}
		
		public System.Data.Linq.Table<CABINE> CABINEs
		{
			get
			{
				return this.GetTable<CABINE>();
			}
		}
		
		public System.Data.Linq.Table<ESECUZIONI_TRATTA> ESECUZIONI_TRATTAs
		{
			get
			{
				return this.GetTable<ESECUZIONI_TRATTA>();
			}
		}
		
		public System.Data.Linq.Table<NAVI> NAVIs
		{
			get
			{
				return this.GetTable<NAVI>();
			}
		}
		
		public System.Data.Linq.Table<NAVIGAZIONI> NAVIGAZIONIs
		{
			get
			{
				return this.GetTable<NAVIGAZIONI>();
			}
		}
		
		public System.Data.Linq.Table<PAGAMENTI> PAGAMENTIs
		{
			get
			{
				return this.GetTable<PAGAMENTI>();
			}
		}
		
		public System.Data.Linq.Table<PASSEGGERI> PASSEGGERIs
		{
			get
			{
				return this.GetTable<PASSEGGERI>();
			}
		}
		
		public System.Data.Linq.Table<PERCORSI> PERCORSIs
		{
			get
			{
				return this.GetTable<PERCORSI>();
			}
		}
		
		public System.Data.Linq.Table<PERSONALE> PERSONALEs
		{
			get
			{
				return this.GetTable<PERSONALE>();
			}
		}
		
		public System.Data.Linq.Table<PONTI> PONTIs
		{
			get
			{
				return this.GetTable<PONTI>();
			}
		}
		
		public System.Data.Linq.Table<PORTI> PORTIs
		{
			get
			{
				return this.GetTable<PORTI>();
			}
		}
		
		public System.Data.Linq.Table<PRENOTAZIONI> PRENOTAZIONIs
		{
			get
			{
				return this.GetTable<PRENOTAZIONI>();
			}
		}
		
		public System.Data.Linq.Table<PRENOTAZIONI_PASSEGGERI> PRENOTAZIONI_PASSEGGERIs
		{
			get
			{
				return this.GetTable<PRENOTAZIONI_PASSEGGERI>();
			}
		}
		
		public System.Data.Linq.Table<PROGRAMMAZIONI> PROGRAMMAZIONIs
		{
			get
			{
				return this.GetTable<PROGRAMMAZIONI>();
			}
		}
		
		public System.Data.Linq.Table<RATE> RATEs
		{
			get
			{
				return this.GetTable<RATE>();
			}
		}
		
		public System.Data.Linq.Table<RESPONSABILITÀ> RESPONSABILITÀs
		{
			get
			{
				return this.GetTable<RESPONSABILITÀ>();
			}
		}
		
		public System.Data.Linq.Table<RIMBORSI> RIMBORSIs
		{
			get
			{
				return this.GetTable<RIMBORSI>();
			}
		}
		
		public System.Data.Linq.Table<RUOLI> RUOLIs
		{
			get
			{
				return this.GetTable<RUOLI>();
			}
		}
		
		public System.Data.Linq.Table<SALE> SALEs
		{
			get
			{
				return this.GetTable<SALE>();
			}
		}
		
		public System.Data.Linq.Table<SCIALUPPE> SCIALUPPEs
		{
			get
			{
				return this.GetTable<SCIALUPPE>();
			}
		}
		
		public System.Data.Linq.Table<SEQUENZE_TRATTE> SEQUENZE_TRATTEs
		{
			get
			{
				return this.GetTable<SEQUENZE_TRATTE>();
			}
		}
		
		public System.Data.Linq.Table<SERVIZI> SERVIZIs
		{
			get
			{
				return this.GetTable<SERVIZI>();
			}
		}
		
		public System.Data.Linq.Table<SPESE_EXTRA> SPESE_EXTRAs
		{
			get
			{
				return this.GetTable<SPESE_EXTRA>();
			}
		}
		
		public System.Data.Linq.Table<TARIFFARI> TARIFFARIs
		{
			get
			{
				return this.GetTable<TARIFFARI>();
			}
		}
		
		public System.Data.Linq.Table<TARIFFARI_PRENOTAZIONI> TARIFFARI_PRENOTAZIONIs
		{
			get
			{
				return this.GetTable<TARIFFARI_PRENOTAZIONI>();
			}
		}
		
		public System.Data.Linq.Table<TIPOLOGIE> TIPOLOGIEs
		{
			get
			{
				return this.GetTable<TIPOLOGIE>();
			}
		}
		
		public System.Data.Linq.Table<TRATTE> TRATTEs
		{
			get
			{
				return this.GetTable<TRATTE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ALLOGGI")]
	public partial class ALLOGGI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodPrenotazione;
		
		private decimal _CodCabina;
		
		private EntityRef<CABINE> _CABINE;
		
		private EntityRef<PRENOTAZIONI> _PRENOTAZIONI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPrenotazioneChanging(decimal value);
    partial void OnCodPrenotazioneChanged();
    partial void OnCodCabinaChanging(decimal value);
    partial void OnCodCabinaChanged();
    #endregion
		
		public ALLOGGI()
		{
			this._CABINE = default(EntityRef<CABINE>);
			this._PRENOTAZIONI = default(EntityRef<PRENOTAZIONI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPrenotazione", DbType="Decimal(5,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodPrenotazione
		{
			get
			{
				return this._CodPrenotazione;
			}
			set
			{
				if ((this._CodPrenotazione != value))
				{
					if (this._PRENOTAZIONI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._CodPrenotazione = value;
					this.SendPropertyChanged("CodPrenotazione");
					this.OnCodPrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCabina", DbType="Decimal(5,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodCabina
		{
			get
			{
				return this._CodCabina;
			}
			set
			{
				if ((this._CodCabina != value))
				{
					if (this._CABINE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodCabinaChanging(value);
					this.SendPropertyChanging();
					this._CodCabina = value;
					this.SendPropertyChanged("CodCabina");
					this.OnCodCabinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CABINE_ALLOGGI", Storage="_CABINE", ThisKey="CodCabina", OtherKey="CodCabina", IsForeignKey=true)]
		public CABINE CABINE
		{
			get
			{
				return this._CABINE.Entity;
			}
			set
			{
				CABINE previousValue = this._CABINE.Entity;
				if (((previousValue != value) 
							|| (this._CABINE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CABINE.Entity = null;
						previousValue.ALLOGGIs.Remove(this);
					}
					this._CABINE.Entity = value;
					if ((value != null))
					{
						value.ALLOGGIs.Add(this);
						this._CodCabina = value.CodCabina;
					}
					else
					{
						this._CodCabina = default(decimal);
					}
					this.SendPropertyChanged("CABINE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONI_ALLOGGI", Storage="_PRENOTAZIONI", ThisKey="CodPrenotazione", OtherKey="CodPrenotazione", IsForeignKey=true)]
		public PRENOTAZIONI PRENOTAZIONI
		{
			get
			{
				return this._PRENOTAZIONI.Entity;
			}
			set
			{
				PRENOTAZIONI previousValue = this._PRENOTAZIONI.Entity;
				if (((previousValue != value) 
							|| (this._PRENOTAZIONI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRENOTAZIONI.Entity = null;
						previousValue.ALLOGGIs.Remove(this);
					}
					this._PRENOTAZIONI.Entity = value;
					if ((value != null))
					{
						value.ALLOGGIs.Add(this);
						this._CodPrenotazione = value.CodPrenotazione;
					}
					else
					{
						this._CodPrenotazione = default(decimal);
					}
					this.SendPropertyChanged("PRENOTAZIONI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TURNI_LAVORATIVI")]
	public partial class TURNI_LAVORATIVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceFiscale;
		
		private System.DateTime _DataOraInizio;
		
		private System.DateTime _DataOraFine;
		
		private EntityRef<PERSONALE> _PERSONALE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnDataOraInizioChanging(System.DateTime value);
    partial void OnDataOraInizioChanged();
    partial void OnDataOraFineChanging(System.DateTime value);
    partial void OnDataOraFineChanged();
    #endregion
		
		public TURNI_LAVORATIVI()
		{
			this._PERSONALE = default(EntityRef<PERSONALE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					if (this._PERSONALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOraInizio", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataOraInizio
		{
			get
			{
				return this._DataOraInizio;
			}
			set
			{
				if ((this._DataOraInizio != value))
				{
					this.OnDataOraInizioChanging(value);
					this.SendPropertyChanging();
					this._DataOraInizio = value;
					this.SendPropertyChanged("DataOraInizio");
					this.OnDataOraInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOraFine", DbType="DateTime NOT NULL")]
		public System.DateTime DataOraFine
		{
			get
			{
				return this._DataOraFine;
			}
			set
			{
				if ((this._DataOraFine != value))
				{
					this.OnDataOraFineChanging(value);
					this.SendPropertyChanging();
					this._DataOraFine = value;
					this.SendPropertyChanged("DataOraFine");
					this.OnDataOraFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONALE_TURNI_LAVORATIVI", Storage="_PERSONALE", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public PERSONALE PERSONALE
		{
			get
			{
				return this._PERSONALE.Entity;
			}
			set
			{
				PERSONALE previousValue = this._PERSONALE.Entity;
				if (((previousValue != value) 
							|| (this._PERSONALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONALE.Entity = null;
						previousValue.TURNI_LAVORATIVIs.Remove(this);
					}
					this._PERSONALE.Entity = value;
					if ((value != null))
					{
						value.TURNI_LAVORATIVIs.Add(this);
						this._CodiceFiscale = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscale = default(string);
					}
					this.SendPropertyChanged("PERSONALE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ANNULLAMENTI")]
	public partial class ANNULLAMENTI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodPrenotazione;
		
		private System.DateTime _DataRichiesta;
		
		private decimal _CodRimborso;
		
		private EntityRef<PRENOTAZIONI> _PRENOTAZIONI;
		
		private EntityRef<RIMBORSI> _RIMBORSI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPrenotazioneChanging(decimal value);
    partial void OnCodPrenotazioneChanged();
    partial void OnDataRichiestaChanging(System.DateTime value);
    partial void OnDataRichiestaChanged();
    partial void OnCodRimborsoChanging(decimal value);
    partial void OnCodRimborsoChanged();
    #endregion
		
		public ANNULLAMENTI()
		{
			this._PRENOTAZIONI = default(EntityRef<PRENOTAZIONI>);
			this._RIMBORSI = default(EntityRef<RIMBORSI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPrenotazione", DbType="Decimal(5,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodPrenotazione
		{
			get
			{
				return this._CodPrenotazione;
			}
			set
			{
				if ((this._CodPrenotazione != value))
				{
					if (this._PRENOTAZIONI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._CodPrenotazione = value;
					this.SendPropertyChanged("CodPrenotazione");
					this.OnCodPrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataRichiesta", DbType="Date NOT NULL")]
		public System.DateTime DataRichiesta
		{
			get
			{
				return this._DataRichiesta;
			}
			set
			{
				if ((this._DataRichiesta != value))
				{
					this.OnDataRichiestaChanging(value);
					this.SendPropertyChanging();
					this._DataRichiesta = value;
					this.SendPropertyChanged("DataRichiesta");
					this.OnDataRichiestaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodRimborso", DbType="Decimal(2,0) NOT NULL")]
		public decimal CodRimborso
		{
			get
			{
				return this._CodRimborso;
			}
			set
			{
				if ((this._CodRimborso != value))
				{
					if (this._RIMBORSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodRimborsoChanging(value);
					this.SendPropertyChanging();
					this._CodRimborso = value;
					this.SendPropertyChanged("CodRimborso");
					this.OnCodRimborsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONI_ANNULLAMENTI", Storage="_PRENOTAZIONI", ThisKey="CodPrenotazione", OtherKey="CodPrenotazione", IsForeignKey=true)]
		public PRENOTAZIONI PRENOTAZIONI
		{
			get
			{
				return this._PRENOTAZIONI.Entity;
			}
			set
			{
				PRENOTAZIONI previousValue = this._PRENOTAZIONI.Entity;
				if (((previousValue != value) 
							|| (this._PRENOTAZIONI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRENOTAZIONI.Entity = null;
						previousValue.ANNULLAMENTI = null;
					}
					this._PRENOTAZIONI.Entity = value;
					if ((value != null))
					{
						value.ANNULLAMENTI = this;
						this._CodPrenotazione = value.CodPrenotazione;
					}
					else
					{
						this._CodPrenotazione = default(decimal);
					}
					this.SendPropertyChanged("PRENOTAZIONI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RIMBORSI_ANNULLAMENTI", Storage="_RIMBORSI", ThisKey="CodRimborso", OtherKey="CodRimborso", IsForeignKey=true)]
		public RIMBORSI RIMBORSI
		{
			get
			{
				return this._RIMBORSI.Entity;
			}
			set
			{
				RIMBORSI previousValue = this._RIMBORSI.Entity;
				if (((previousValue != value) 
							|| (this._RIMBORSI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RIMBORSI.Entity = null;
						previousValue.ANNULLAMENTIs.Remove(this);
					}
					this._RIMBORSI.Entity = value;
					if ((value != null))
					{
						value.ANNULLAMENTIs.Add(this);
						this._CodRimborso = value.CodRimborso;
					}
					else
					{
						this._CodRimborso = default(decimal);
					}
					this.SendPropertyChanged("RIMBORSI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ATTIVITÀ")]
	public partial class ATTIVITÀ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodAttività;
		
		private string _Nome;
		
		private string _Descrizione;
		
		private EntitySet<PROGRAMMAZIONI> _PROGRAMMAZIONIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodAttivitàChanging(decimal value);
    partial void OnCodAttivitàChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public ATTIVITÀ()
		{
			this._PROGRAMMAZIONIs = new EntitySet<PROGRAMMAZIONI>(new Action<PROGRAMMAZIONI>(this.attach_PROGRAMMAZIONIs), new Action<PROGRAMMAZIONI>(this.detach_PROGRAMMAZIONIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodAttività", AutoSync=AutoSync.OnInsert, DbType="Decimal(5,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CodAttività
		{
			get
			{
				return this._CodAttività;
			}
			set
			{
				if ((this._CodAttività != value))
				{
					this.OnCodAttivitàChanging(value);
					this.SendPropertyChanging();
					this._CodAttività = value;
					this.SendPropertyChanged("CodAttività");
					this.OnCodAttivitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(150)")]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ATTIVITÀ_PROGRAMMAZIONI", Storage="_PROGRAMMAZIONIs", ThisKey="CodAttività", OtherKey="CodAttività")]
		public EntitySet<PROGRAMMAZIONI> PROGRAMMAZIONIs
		{
			get
			{
				return this._PROGRAMMAZIONIs;
			}
			set
			{
				this._PROGRAMMAZIONIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROGRAMMAZIONIs(PROGRAMMAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.ATTIVITÀ = this;
		}
		
		private void detach_PROGRAMMAZIONIs(PROGRAMMAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.ATTIVITÀ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BADGE")]
	public partial class BADGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodBadge;
		
		private decimal _CodPrenotazione;
		
		private string _CodiceFiscale;
		
		private string _CartaCredito;
		
		private EntitySet<SPESE_EXTRA> _SPESE_EXTRAs;
		
		private EntityRef<PASSEGGERI> _PASSEGGERI;
		
		private EntityRef<PRENOTAZIONI> _PRENOTAZIONI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodBadgeChanging(decimal value);
    partial void OnCodBadgeChanged();
    partial void OnCodPrenotazioneChanging(decimal value);
    partial void OnCodPrenotazioneChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnCartaCreditoChanging(string value);
    partial void OnCartaCreditoChanged();
    #endregion
		
		public BADGE()
		{
			this._SPESE_EXTRAs = new EntitySet<SPESE_EXTRA>(new Action<SPESE_EXTRA>(this.attach_SPESE_EXTRAs), new Action<SPESE_EXTRA>(this.detach_SPESE_EXTRAs));
			this._PASSEGGERI = default(EntityRef<PASSEGGERI>);
			this._PRENOTAZIONI = default(EntityRef<PRENOTAZIONI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodBadge", AutoSync=AutoSync.OnInsert, DbType="Decimal(10,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CodBadge
		{
			get
			{
				return this._CodBadge;
			}
			set
			{
				if ((this._CodBadge != value))
				{
					this.OnCodBadgeChanging(value);
					this.SendPropertyChanging();
					this._CodBadge = value;
					this.SendPropertyChanged("CodBadge");
					this.OnCodBadgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPrenotazione", DbType="Decimal(5,0) NOT NULL")]
		public decimal CodPrenotazione
		{
			get
			{
				return this._CodPrenotazione;
			}
			set
			{
				if ((this._CodPrenotazione != value))
				{
					if (this._PRENOTAZIONI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._CodPrenotazione = value;
					this.SendPropertyChanged("CodPrenotazione");
					this.OnCodPrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					if (this._PASSEGGERI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CartaCredito", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string CartaCredito
		{
			get
			{
				return this._CartaCredito;
			}
			set
			{
				if ((this._CartaCredito != value))
				{
					this.OnCartaCreditoChanging(value);
					this.SendPropertyChanging();
					this._CartaCredito = value;
					this.SendPropertyChanged("CartaCredito");
					this.OnCartaCreditoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BADGE_SPESE_EXTRA", Storage="_SPESE_EXTRAs", ThisKey="CodBadge", OtherKey="CodBadge")]
		public EntitySet<SPESE_EXTRA> SPESE_EXTRAs
		{
			get
			{
				return this._SPESE_EXTRAs;
			}
			set
			{
				this._SPESE_EXTRAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PASSEGGERI_BADGE", Storage="_PASSEGGERI", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public PASSEGGERI PASSEGGERI
		{
			get
			{
				return this._PASSEGGERI.Entity;
			}
			set
			{
				PASSEGGERI previousValue = this._PASSEGGERI.Entity;
				if (((previousValue != value) 
							|| (this._PASSEGGERI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PASSEGGERI.Entity = null;
						previousValue.BADGEs.Remove(this);
					}
					this._PASSEGGERI.Entity = value;
					if ((value != null))
					{
						value.BADGEs.Add(this);
						this._CodiceFiscale = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscale = default(string);
					}
					this.SendPropertyChanged("PASSEGGERI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONI_BADGE", Storage="_PRENOTAZIONI", ThisKey="CodPrenotazione", OtherKey="CodPrenotazione", IsForeignKey=true)]
		public PRENOTAZIONI PRENOTAZIONI
		{
			get
			{
				return this._PRENOTAZIONI.Entity;
			}
			set
			{
				PRENOTAZIONI previousValue = this._PRENOTAZIONI.Entity;
				if (((previousValue != value) 
							|| (this._PRENOTAZIONI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRENOTAZIONI.Entity = null;
						previousValue.BADGEs.Remove(this);
					}
					this._PRENOTAZIONI.Entity = value;
					if ((value != null))
					{
						value.BADGEs.Add(this);
						this._CodPrenotazione = value.CodPrenotazione;
					}
					else
					{
						this._CodPrenotazione = default(decimal);
					}
					this.SendPropertyChanged("PRENOTAZIONI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPESE_EXTRAs(SPESE_EXTRA entity)
		{
			this.SendPropertyChanging();
			entity.BADGE = this;
		}
		
		private void detach_SPESE_EXTRAs(SPESE_EXTRA entity)
		{
			this.SendPropertyChanging();
			entity.BADGE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CABINE")]
	public partial class CABINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodCabina;
		
		private string _NomeNave;
		
		private decimal _NumeroPonte;
		
		private decimal _NumeroLocale;
		
		private decimal _PostiLetto;
		
		private string _Posizione;
		
		private string _NomeTipologia;
		
		private EntitySet<ALLOGGI> _ALLOGGIs;
		
		private EntityRef<PONTI> _PONTI;
		
		private EntityRef<TIPOLOGIE> _TIPOLOGIE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodCabinaChanging(decimal value);
    partial void OnCodCabinaChanged();
    partial void OnNomeNaveChanging(string value);
    partial void OnNomeNaveChanged();
    partial void OnNumeroPonteChanging(decimal value);
    partial void OnNumeroPonteChanged();
    partial void OnNumeroLocaleChanging(decimal value);
    partial void OnNumeroLocaleChanged();
    partial void OnPostiLettoChanging(decimal value);
    partial void OnPostiLettoChanged();
    partial void OnPosizioneChanging(string value);
    partial void OnPosizioneChanged();
    partial void OnNomeTipologiaChanging(string value);
    partial void OnNomeTipologiaChanged();
    #endregion
		
		public CABINE()
		{
			this._ALLOGGIs = new EntitySet<ALLOGGI>(new Action<ALLOGGI>(this.attach_ALLOGGIs), new Action<ALLOGGI>(this.detach_ALLOGGIs));
			this._PONTI = default(EntityRef<PONTI>);
			this._TIPOLOGIE = default(EntityRef<TIPOLOGIE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCabina", AutoSync=AutoSync.OnInsert, DbType="Decimal(5,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CodCabina
		{
			get
			{
				return this._CodCabina;
			}
			set
			{
				if ((this._CodCabina != value))
				{
					this.OnCodCabinaChanging(value);
					this.SendPropertyChanging();
					this._CodCabina = value;
					this.SendPropertyChanged("CodCabina");
					this.OnCodCabinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeNave", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomeNave
		{
			get
			{
				return this._NomeNave;
			}
			set
			{
				if ((this._NomeNave != value))
				{
					if (this._PONTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeNaveChanging(value);
					this.SendPropertyChanging();
					this._NomeNave = value;
					this.SendPropertyChanged("NomeNave");
					this.OnNomeNaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroPonte", DbType="Decimal(2,0) NOT NULL")]
		public decimal NumeroPonte
		{
			get
			{
				return this._NumeroPonte;
			}
			set
			{
				if ((this._NumeroPonte != value))
				{
					if (this._PONTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroPonteChanging(value);
					this.SendPropertyChanging();
					this._NumeroPonte = value;
					this.SendPropertyChanged("NumeroPonte");
					this.OnNumeroPonteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroLocale", DbType="Decimal(3,0) NOT NULL")]
		public decimal NumeroLocale
		{
			get
			{
				return this._NumeroLocale;
			}
			set
			{
				if ((this._NumeroLocale != value))
				{
					this.OnNumeroLocaleChanging(value);
					this.SendPropertyChanging();
					this._NumeroLocale = value;
					this.SendPropertyChanged("NumeroLocale");
					this.OnNumeroLocaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostiLetto", DbType="Decimal(1,0) NOT NULL")]
		public decimal PostiLetto
		{
			get
			{
				return this._PostiLetto;
			}
			set
			{
				if ((this._PostiLetto != value))
				{
					this.OnPostiLettoChanging(value);
					this.SendPropertyChanging();
					this._PostiLetto = value;
					this.SendPropertyChanged("PostiLetto");
					this.OnPostiLettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Posizione", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Posizione
		{
			get
			{
				return this._Posizione;
			}
			set
			{
				if ((this._Posizione != value))
				{
					this.OnPosizioneChanging(value);
					this.SendPropertyChanging();
					this._Posizione = value;
					this.SendPropertyChanged("Posizione");
					this.OnPosizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeTipologia", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string NomeTipologia
		{
			get
			{
				return this._NomeTipologia;
			}
			set
			{
				if ((this._NomeTipologia != value))
				{
					if (this._TIPOLOGIE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeTipologiaChanging(value);
					this.SendPropertyChanging();
					this._NomeTipologia = value;
					this.SendPropertyChanged("NomeTipologia");
					this.OnNomeTipologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CABINE_ALLOGGI", Storage="_ALLOGGIs", ThisKey="CodCabina", OtherKey="CodCabina")]
		public EntitySet<ALLOGGI> ALLOGGIs
		{
			get
			{
				return this._ALLOGGIs;
			}
			set
			{
				this._ALLOGGIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PONTI_CABINE", Storage="_PONTI", ThisKey="NomeNave,NumeroPonte", OtherKey="NomeNave,Numero", IsForeignKey=true)]
		public PONTI PONTI
		{
			get
			{
				return this._PONTI.Entity;
			}
			set
			{
				PONTI previousValue = this._PONTI.Entity;
				if (((previousValue != value) 
							|| (this._PONTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PONTI.Entity = null;
						previousValue.CABINEs.Remove(this);
					}
					this._PONTI.Entity = value;
					if ((value != null))
					{
						value.CABINEs.Add(this);
						this._NomeNave = value.NomeNave;
						this._NumeroPonte = value.Numero;
					}
					else
					{
						this._NomeNave = default(string);
						this._NumeroPonte = default(decimal);
					}
					this.SendPropertyChanged("PONTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOLOGIE_CABINE", Storage="_TIPOLOGIE", ThisKey="NomeTipologia", OtherKey="Nome", IsForeignKey=true)]
		public TIPOLOGIE TIPOLOGIE
		{
			get
			{
				return this._TIPOLOGIE.Entity;
			}
			set
			{
				TIPOLOGIE previousValue = this._TIPOLOGIE.Entity;
				if (((previousValue != value) 
							|| (this._TIPOLOGIE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOLOGIE.Entity = null;
						previousValue.CABINEs.Remove(this);
					}
					this._TIPOLOGIE.Entity = value;
					if ((value != null))
					{
						value.CABINEs.Add(this);
						this._NomeTipologia = value.Nome;
					}
					else
					{
						this._NomeTipologia = default(string);
					}
					this.SendPropertyChanged("TIPOLOGIE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ALLOGGIs(ALLOGGI entity)
		{
			this.SendPropertyChanging();
			entity.CABINE = this;
		}
		
		private void detach_ALLOGGIs(ALLOGGI entity)
		{
			this.SendPropertyChanging();
			entity.CABINE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESECUZIONI_TRATTA")]
	public partial class ESECUZIONI_TRATTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodTratta;
		
		private System.DateTime _Partenza_Data;
		
		private System.TimeSpan _Partenza_Ora;
		
		private System.DateTime _Arrivo_Data;
		
		private System.TimeSpan _Arrivo_Ora;
		
		private decimal _CodNavigazione;
		
		private EntityRef<NAVIGAZIONI> _NAVIGAZIONI;
		
		private EntityRef<TRATTE> _TRATTE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodTrattaChanging(decimal value);
    partial void OnCodTrattaChanged();
    partial void OnPartenza_DataChanging(System.DateTime value);
    partial void OnPartenza_DataChanged();
    partial void OnPartenza_OraChanging(System.TimeSpan value);
    partial void OnPartenza_OraChanged();
    partial void OnArrivo_DataChanging(System.DateTime value);
    partial void OnArrivo_DataChanged();
    partial void OnArrivo_OraChanging(System.TimeSpan value);
    partial void OnArrivo_OraChanged();
    partial void OnCodNavigazioneChanging(decimal value);
    partial void OnCodNavigazioneChanged();
    #endregion
		
		public ESECUZIONI_TRATTA()
		{
			this._NAVIGAZIONI = default(EntityRef<NAVIGAZIONI>);
			this._TRATTE = default(EntityRef<TRATTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTratta", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodTratta
		{
			get
			{
				return this._CodTratta;
			}
			set
			{
				if ((this._CodTratta != value))
				{
					if (this._TRATTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodTrattaChanging(value);
					this.SendPropertyChanging();
					this._CodTratta = value;
					this.SendPropertyChanged("CodTratta");
					this.OnCodTrattaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partenza_Data", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Partenza_Data
		{
			get
			{
				return this._Partenza_Data;
			}
			set
			{
				if ((this._Partenza_Data != value))
				{
					this.OnPartenza_DataChanging(value);
					this.SendPropertyChanging();
					this._Partenza_Data = value;
					this.SendPropertyChanged("Partenza_Data");
					this.OnPartenza_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partenza_Ora", DbType="Time NOT NULL")]
		public System.TimeSpan Partenza_Ora
		{
			get
			{
				return this._Partenza_Ora;
			}
			set
			{
				if ((this._Partenza_Ora != value))
				{
					this.OnPartenza_OraChanging(value);
					this.SendPropertyChanging();
					this._Partenza_Ora = value;
					this.SendPropertyChanged("Partenza_Ora");
					this.OnPartenza_OraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arrivo_Data", DbType="Date NOT NULL")]
		public System.DateTime Arrivo_Data
		{
			get
			{
				return this._Arrivo_Data;
			}
			set
			{
				if ((this._Arrivo_Data != value))
				{
					this.OnArrivo_DataChanging(value);
					this.SendPropertyChanging();
					this._Arrivo_Data = value;
					this.SendPropertyChanged("Arrivo_Data");
					this.OnArrivo_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arrivo_Ora", DbType="Time NOT NULL")]
		public System.TimeSpan Arrivo_Ora
		{
			get
			{
				return this._Arrivo_Ora;
			}
			set
			{
				if ((this._Arrivo_Ora != value))
				{
					this.OnArrivo_OraChanging(value);
					this.SendPropertyChanging();
					this._Arrivo_Ora = value;
					this.SendPropertyChanged("Arrivo_Ora");
					this.OnArrivo_OraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodNavigazione", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodNavigazione
		{
			get
			{
				return this._CodNavigazione;
			}
			set
			{
				if ((this._CodNavigazione != value))
				{
					if (this._NAVIGAZIONI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodNavigazioneChanging(value);
					this.SendPropertyChanging();
					this._CodNavigazione = value;
					this.SendPropertyChanged("CodNavigazione");
					this.OnCodNavigazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVIGAZIONI_ESECUZIONI_TRATTA", Storage="_NAVIGAZIONI", ThisKey="CodNavigazione", OtherKey="CodNavigazione", IsForeignKey=true)]
		public NAVIGAZIONI NAVIGAZIONI
		{
			get
			{
				return this._NAVIGAZIONI.Entity;
			}
			set
			{
				NAVIGAZIONI previousValue = this._NAVIGAZIONI.Entity;
				if (((previousValue != value) 
							|| (this._NAVIGAZIONI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAVIGAZIONI.Entity = null;
						previousValue.ESECUZIONI_TRATTAs.Remove(this);
					}
					this._NAVIGAZIONI.Entity = value;
					if ((value != null))
					{
						value.ESECUZIONI_TRATTAs.Add(this);
						this._CodNavigazione = value.CodNavigazione;
					}
					else
					{
						this._CodNavigazione = default(decimal);
					}
					this.SendPropertyChanged("NAVIGAZIONI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRATTE_ESECUZIONI_TRATTA", Storage="_TRATTE", ThisKey="CodTratta", OtherKey="CodTratta", IsForeignKey=true)]
		public TRATTE TRATTE
		{
			get
			{
				return this._TRATTE.Entity;
			}
			set
			{
				TRATTE previousValue = this._TRATTE.Entity;
				if (((previousValue != value) 
							|| (this._TRATTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRATTE.Entity = null;
						previousValue.ESECUZIONI_TRATTAs.Remove(this);
					}
					this._TRATTE.Entity = value;
					if ((value != null))
					{
						value.ESECUZIONI_TRATTAs.Add(this);
						this._CodTratta = value.CodTratta;
					}
					else
					{
						this._CodTratta = default(decimal);
					}
					this.SendPropertyChanged("TRATTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NAVI")]
	public partial class NAVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private decimal _CodNave;
		
		private decimal _Larghezza;
		
		private decimal _Lunghezza;
		
		private decimal _Peso;
		
		private decimal _Altezza;
		
		private decimal _NumeroCabine;
		
		private EntitySet<NAVIGAZIONI> _NAVIGAZIONIs;
		
		private EntitySet<PERCORSI> _PERCORSIs;
		
		private EntitySet<PONTI> _PONTIs;
		
		private EntitySet<SCIALUPPE> _SCIALUPPEs;
		
		private EntitySet<TARIFFARI> _TARIFFARIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCodNaveChanging(decimal value);
    partial void OnCodNaveChanged();
    partial void OnLarghezzaChanging(decimal value);
    partial void OnLarghezzaChanged();
    partial void OnLunghezzaChanging(decimal value);
    partial void OnLunghezzaChanged();
    partial void OnPesoChanging(decimal value);
    partial void OnPesoChanged();
    partial void OnAltezzaChanging(decimal value);
    partial void OnAltezzaChanged();
    partial void OnNumeroCabineChanging(decimal value);
    partial void OnNumeroCabineChanged();
    #endregion
		
		public NAVI()
		{
			this._NAVIGAZIONIs = new EntitySet<NAVIGAZIONI>(new Action<NAVIGAZIONI>(this.attach_NAVIGAZIONIs), new Action<NAVIGAZIONI>(this.detach_NAVIGAZIONIs));
			this._PERCORSIs = new EntitySet<PERCORSI>(new Action<PERCORSI>(this.attach_PERCORSIs), new Action<PERCORSI>(this.detach_PERCORSIs));
			this._PONTIs = new EntitySet<PONTI>(new Action<PONTI>(this.attach_PONTIs), new Action<PONTI>(this.detach_PONTIs));
			this._SCIALUPPEs = new EntitySet<SCIALUPPE>(new Action<SCIALUPPE>(this.attach_SCIALUPPEs), new Action<SCIALUPPE>(this.detach_SCIALUPPEs));
			this._TARIFFARIs = new EntitySet<TARIFFARI>(new Action<TARIFFARI>(this.attach_TARIFFARIs), new Action<TARIFFARI>(this.detach_TARIFFARIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodNave", AutoSync=AutoSync.Always, DbType="Decimal(2,0) NOT NULL IDENTITY", IsDbGenerated=true)]
		public decimal CodNave
		{
			get
			{
				return this._CodNave;
			}
			set
			{
				if ((this._CodNave != value))
				{
					this.OnCodNaveChanging(value);
					this.SendPropertyChanging();
					this._CodNave = value;
					this.SendPropertyChanged("CodNave");
					this.OnCodNaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Larghezza", DbType="Decimal(3,0) NOT NULL")]
		public decimal Larghezza
		{
			get
			{
				return this._Larghezza;
			}
			set
			{
				if ((this._Larghezza != value))
				{
					this.OnLarghezzaChanging(value);
					this.SendPropertyChanging();
					this._Larghezza = value;
					this.SendPropertyChanged("Larghezza");
					this.OnLarghezzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lunghezza", DbType="Decimal(3,0) NOT NULL")]
		public decimal Lunghezza
		{
			get
			{
				return this._Lunghezza;
			}
			set
			{
				if ((this._Lunghezza != value))
				{
					this.OnLunghezzaChanging(value);
					this.SendPropertyChanging();
					this._Lunghezza = value;
					this.SendPropertyChanged("Lunghezza");
					this.OnLunghezzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peso", DbType="Decimal(6,0) NOT NULL")]
		public decimal Peso
		{
			get
			{
				return this._Peso;
			}
			set
			{
				if ((this._Peso != value))
				{
					this.OnPesoChanging(value);
					this.SendPropertyChanging();
					this._Peso = value;
					this.SendPropertyChanged("Peso");
					this.OnPesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Altezza", DbType="Decimal(3,0) NOT NULL")]
		public decimal Altezza
		{
			get
			{
				return this._Altezza;
			}
			set
			{
				if ((this._Altezza != value))
				{
					this.OnAltezzaChanging(value);
					this.SendPropertyChanging();
					this._Altezza = value;
					this.SendPropertyChanged("Altezza");
					this.OnAltezzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroCabine", DbType="Decimal(4,0) NOT NULL")]
		public decimal NumeroCabine
		{
			get
			{
				return this._NumeroCabine;
			}
			set
			{
				if ((this._NumeroCabine != value))
				{
					this.OnNumeroCabineChanging(value);
					this.SendPropertyChanging();
					this._NumeroCabine = value;
					this.SendPropertyChanged("NumeroCabine");
					this.OnNumeroCabineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVI_NAVIGAZIONI", Storage="_NAVIGAZIONIs", ThisKey="Nome", OtherKey="NomeNave")]
		public EntitySet<NAVIGAZIONI> NAVIGAZIONIs
		{
			get
			{
				return this._NAVIGAZIONIs;
			}
			set
			{
				this._NAVIGAZIONIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVI_PERCORSI", Storage="_PERCORSIs", ThisKey="Nome", OtherKey="NomeNave")]
		public EntitySet<PERCORSI> PERCORSIs
		{
			get
			{
				return this._PERCORSIs;
			}
			set
			{
				this._PERCORSIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVI_PONTI", Storage="_PONTIs", ThisKey="Nome", OtherKey="NomeNave")]
		public EntitySet<PONTI> PONTIs
		{
			get
			{
				return this._PONTIs;
			}
			set
			{
				this._PONTIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVI_SCIALUPPE", Storage="_SCIALUPPEs", ThisKey="Nome", OtherKey="NomeNave")]
		public EntitySet<SCIALUPPE> SCIALUPPEs
		{
			get
			{
				return this._SCIALUPPEs;
			}
			set
			{
				this._SCIALUPPEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVI_TARIFFARI", Storage="_TARIFFARIs", ThisKey="Nome", OtherKey="NomeNave")]
		public EntitySet<TARIFFARI> TARIFFARIs
		{
			get
			{
				return this._TARIFFARIs;
			}
			set
			{
				this._TARIFFARIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NAVIGAZIONIs(NAVIGAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.NAVI = this;
		}
		
		private void detach_NAVIGAZIONIs(NAVIGAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.NAVI = null;
		}
		
		private void attach_PERCORSIs(PERCORSI entity)
		{
			this.SendPropertyChanging();
			entity.NAVI = this;
		}
		
		private void detach_PERCORSIs(PERCORSI entity)
		{
			this.SendPropertyChanging();
			entity.NAVI = null;
		}
		
		private void attach_PONTIs(PONTI entity)
		{
			this.SendPropertyChanging();
			entity.NAVI = this;
		}
		
		private void detach_PONTIs(PONTI entity)
		{
			this.SendPropertyChanging();
			entity.NAVI = null;
		}
		
		private void attach_SCIALUPPEs(SCIALUPPE entity)
		{
			this.SendPropertyChanging();
			entity.NAVI = this;
		}
		
		private void detach_SCIALUPPEs(SCIALUPPE entity)
		{
			this.SendPropertyChanging();
			entity.NAVI = null;
		}
		
		private void attach_TARIFFARIs(TARIFFARI entity)
		{
			this.SendPropertyChanging();
			entity.NAVI = this;
		}
		
		private void detach_TARIFFARIs(TARIFFARI entity)
		{
			this.SendPropertyChanging();
			entity.NAVI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NAVIGAZIONI")]
	public partial class NAVIGAZIONI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodNavigazione;
		
		private string _NomeNave;
		
		private System.DateTime _DataInizio;
		
		private System.DateTime _DataFine;
		
		private decimal _NumeroEsecuzioni;
		
		private string _CodPercorso;
		
		private EntitySet<ESECUZIONI_TRATTA> _ESECUZIONI_TRATTAs;
		
		private EntitySet<PRENOTAZIONI> _PRENOTAZIONIs;
		
		private EntitySet<PROGRAMMAZIONI> _PROGRAMMAZIONIs;
		
		private EntitySet<RESPONSABILITÀ> _RESPONSABILITÀs;
		
		private EntitySet<SERVIZI> _SERVIZIs;
		
		private EntityRef<NAVI> _NAVI;
		
		private EntityRef<PERCORSI> _PERCORSI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodNavigazioneChanging(decimal value);
    partial void OnCodNavigazioneChanged();
    partial void OnNomeNaveChanging(string value);
    partial void OnNomeNaveChanged();
    partial void OnDataInizioChanging(System.DateTime value);
    partial void OnDataInizioChanged();
    partial void OnDataFineChanging(System.DateTime value);
    partial void OnDataFineChanged();
    partial void OnNumeroEsecuzioniChanging(decimal value);
    partial void OnNumeroEsecuzioniChanged();
    partial void OnCodPercorsoChanging(string value);
    partial void OnCodPercorsoChanged();
    #endregion
		
		public NAVIGAZIONI()
		{
			this._ESECUZIONI_TRATTAs = new EntitySet<ESECUZIONI_TRATTA>(new Action<ESECUZIONI_TRATTA>(this.attach_ESECUZIONI_TRATTAs), new Action<ESECUZIONI_TRATTA>(this.detach_ESECUZIONI_TRATTAs));
			this._PRENOTAZIONIs = new EntitySet<PRENOTAZIONI>(new Action<PRENOTAZIONI>(this.attach_PRENOTAZIONIs), new Action<PRENOTAZIONI>(this.detach_PRENOTAZIONIs));
			this._PROGRAMMAZIONIs = new EntitySet<PROGRAMMAZIONI>(new Action<PROGRAMMAZIONI>(this.attach_PROGRAMMAZIONIs), new Action<PROGRAMMAZIONI>(this.detach_PROGRAMMAZIONIs));
			this._RESPONSABILITÀs = new EntitySet<RESPONSABILITÀ>(new Action<RESPONSABILITÀ>(this.attach_RESPONSABILITÀs), new Action<RESPONSABILITÀ>(this.detach_RESPONSABILITÀs));
			this._SERVIZIs = new EntitySet<SERVIZI>(new Action<SERVIZI>(this.attach_SERVIZIs), new Action<SERVIZI>(this.detach_SERVIZIs));
			this._NAVI = default(EntityRef<NAVI>);
			this._PERCORSI = default(EntityRef<PERCORSI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodNavigazione", AutoSync=AutoSync.OnInsert, DbType="Decimal(3,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CodNavigazione
		{
			get
			{
				return this._CodNavigazione;
			}
			set
			{
				if ((this._CodNavigazione != value))
				{
					this.OnCodNavigazioneChanging(value);
					this.SendPropertyChanging();
					this._CodNavigazione = value;
					this.SendPropertyChanged("CodNavigazione");
					this.OnCodNavigazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeNave", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomeNave
		{
			get
			{
				return this._NomeNave;
			}
			set
			{
				if ((this._NomeNave != value))
				{
					if (this._NAVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeNaveChanging(value);
					this.SendPropertyChanging();
					this._NomeNave = value;
					this.SendPropertyChanged("NomeNave");
					this.OnNomeNaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizio", DbType="Date NOT NULL")]
		public System.DateTime DataInizio
		{
			get
			{
				return this._DataInizio;
			}
			set
			{
				if ((this._DataInizio != value))
				{
					this.OnDataInizioChanging(value);
					this.SendPropertyChanging();
					this._DataInizio = value;
					this.SendPropertyChanged("DataInizio");
					this.OnDataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFine", DbType="Date NOT NULL")]
		public System.DateTime DataFine
		{
			get
			{
				return this._DataFine;
			}
			set
			{
				if ((this._DataFine != value))
				{
					this.OnDataFineChanging(value);
					this.SendPropertyChanging();
					this._DataFine = value;
					this.SendPropertyChanged("DataFine");
					this.OnDataFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroEsecuzioni", DbType="Decimal(2,0) NOT NULL")]
		public decimal NumeroEsecuzioni
		{
			get
			{
				return this._NumeroEsecuzioni;
			}
			set
			{
				if ((this._NumeroEsecuzioni != value))
				{
					this.OnNumeroEsecuzioniChanging(value);
					this.SendPropertyChanging();
					this._NumeroEsecuzioni = value;
					this.SendPropertyChanged("NumeroEsecuzioni");
					this.OnNumeroEsecuzioniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPercorso", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string CodPercorso
		{
			get
			{
				return this._CodPercorso;
			}
			set
			{
				if ((this._CodPercorso != value))
				{
					if (this._PERCORSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPercorsoChanging(value);
					this.SendPropertyChanging();
					this._CodPercorso = value;
					this.SendPropertyChanged("CodPercorso");
					this.OnCodPercorsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVIGAZIONI_ESECUZIONI_TRATTA", Storage="_ESECUZIONI_TRATTAs", ThisKey="CodNavigazione", OtherKey="CodNavigazione")]
		public EntitySet<ESECUZIONI_TRATTA> ESECUZIONI_TRATTAs
		{
			get
			{
				return this._ESECUZIONI_TRATTAs;
			}
			set
			{
				this._ESECUZIONI_TRATTAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVIGAZIONI_PRENOTAZIONI", Storage="_PRENOTAZIONIs", ThisKey="CodNavigazione", OtherKey="CodNavigazione")]
		public EntitySet<PRENOTAZIONI> PRENOTAZIONIs
		{
			get
			{
				return this._PRENOTAZIONIs;
			}
			set
			{
				this._PRENOTAZIONIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVIGAZIONI_PROGRAMMAZIONI", Storage="_PROGRAMMAZIONIs", ThisKey="CodNavigazione", OtherKey="CodNavigazione")]
		public EntitySet<PROGRAMMAZIONI> PROGRAMMAZIONIs
		{
			get
			{
				return this._PROGRAMMAZIONIs;
			}
			set
			{
				this._PROGRAMMAZIONIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVIGAZIONI_RESPONSABILITÀ", Storage="_RESPONSABILITÀs", ThisKey="CodNavigazione", OtherKey="CodNavigazione")]
		public EntitySet<RESPONSABILITÀ> RESPONSABILITÀs
		{
			get
			{
				return this._RESPONSABILITÀs;
			}
			set
			{
				this._RESPONSABILITÀs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVIGAZIONI_SERVIZI", Storage="_SERVIZIs", ThisKey="CodNavigazione", OtherKey="CodNavigazione")]
		public EntitySet<SERVIZI> SERVIZIs
		{
			get
			{
				return this._SERVIZIs;
			}
			set
			{
				this._SERVIZIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVI_NAVIGAZIONI", Storage="_NAVI", ThisKey="NomeNave", OtherKey="Nome", IsForeignKey=true)]
		public NAVI NAVI
		{
			get
			{
				return this._NAVI.Entity;
			}
			set
			{
				NAVI previousValue = this._NAVI.Entity;
				if (((previousValue != value) 
							|| (this._NAVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAVI.Entity = null;
						previousValue.NAVIGAZIONIs.Remove(this);
					}
					this._NAVI.Entity = value;
					if ((value != null))
					{
						value.NAVIGAZIONIs.Add(this);
						this._NomeNave = value.Nome;
					}
					else
					{
						this._NomeNave = default(string);
					}
					this.SendPropertyChanged("NAVI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERCORSI_NAVIGAZIONI", Storage="_PERCORSI", ThisKey="CodPercorso", OtherKey="CodPercorso", IsForeignKey=true)]
		public PERCORSI PERCORSI
		{
			get
			{
				return this._PERCORSI.Entity;
			}
			set
			{
				PERCORSI previousValue = this._PERCORSI.Entity;
				if (((previousValue != value) 
							|| (this._PERCORSI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERCORSI.Entity = null;
						previousValue.NAVIGAZIONIs.Remove(this);
					}
					this._PERCORSI.Entity = value;
					if ((value != null))
					{
						value.NAVIGAZIONIs.Add(this);
						this._CodPercorso = value.CodPercorso;
					}
					else
					{
						this._CodPercorso = default(string);
					}
					this.SendPropertyChanged("PERCORSI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ESECUZIONI_TRATTAs(ESECUZIONI_TRATTA entity)
		{
			this.SendPropertyChanging();
			entity.NAVIGAZIONI = this;
		}
		
		private void detach_ESECUZIONI_TRATTAs(ESECUZIONI_TRATTA entity)
		{
			this.SendPropertyChanging();
			entity.NAVIGAZIONI = null;
		}
		
		private void attach_PRENOTAZIONIs(PRENOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.NAVIGAZIONI = this;
		}
		
		private void detach_PRENOTAZIONIs(PRENOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.NAVIGAZIONI = null;
		}
		
		private void attach_PROGRAMMAZIONIs(PROGRAMMAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.NAVIGAZIONI = this;
		}
		
		private void detach_PROGRAMMAZIONIs(PROGRAMMAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.NAVIGAZIONI = null;
		}
		
		private void attach_RESPONSABILITÀs(RESPONSABILITÀ entity)
		{
			this.SendPropertyChanging();
			entity.NAVIGAZIONI = this;
		}
		
		private void detach_RESPONSABILITÀs(RESPONSABILITÀ entity)
		{
			this.SendPropertyChanging();
			entity.NAVIGAZIONI = null;
		}
		
		private void attach_SERVIZIs(SERVIZI entity)
		{
			this.SendPropertyChanging();
			entity.NAVIGAZIONI = this;
		}
		
		private void detach_SERVIZIs(SERVIZI entity)
		{
			this.SendPropertyChanging();
			entity.NAVIGAZIONI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAGAMENTI")]
	public partial class PAGAMENTI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodTransazione;
		
		private System.DateTime _DataPagamento;
		
		private decimal _Importo;
		
		private System.Nullable<decimal> _NumeroRate;
		
		private System.Nullable<decimal> _Anticipo;
		
		private EntitySet<PRENOTAZIONI> _PRENOTAZIONIs;
		
		private EntitySet<RATE> _RATEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodTransazioneChanging(decimal value);
    partial void OnCodTransazioneChanged();
    partial void OnDataPagamentoChanging(System.DateTime value);
    partial void OnDataPagamentoChanged();
    partial void OnImportoChanging(decimal value);
    partial void OnImportoChanged();
    partial void OnNumeroRateChanging(System.Nullable<decimal> value);
    partial void OnNumeroRateChanged();
    partial void OnAnticipoChanging(System.Nullable<decimal> value);
    partial void OnAnticipoChanged();
    #endregion
		
		public PAGAMENTI()
		{
			this._PRENOTAZIONIs = new EntitySet<PRENOTAZIONI>(new Action<PRENOTAZIONI>(this.attach_PRENOTAZIONIs), new Action<PRENOTAZIONI>(this.detach_PRENOTAZIONIs));
			this._RATEs = new EntitySet<RATE>(new Action<RATE>(this.attach_RATEs), new Action<RATE>(this.detach_RATEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTransazione", AutoSync=AutoSync.OnInsert, DbType="Decimal(5,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CodTransazione
		{
			get
			{
				return this._CodTransazione;
			}
			set
			{
				if ((this._CodTransazione != value))
				{
					this.OnCodTransazioneChanging(value);
					this.SendPropertyChanging();
					this._CodTransazione = value;
					this.SendPropertyChanged("CodTransazione");
					this.OnCodTransazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPagamento", DbType="Date NOT NULL")]
		public System.DateTime DataPagamento
		{
			get
			{
				return this._DataPagamento;
			}
			set
			{
				if ((this._DataPagamento != value))
				{
					this.OnDataPagamentoChanging(value);
					this.SendPropertyChanging();
					this._DataPagamento = value;
					this.SendPropertyChanged("DataPagamento");
					this.OnDataPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importo", DbType="Decimal(4,0) NOT NULL")]
		public decimal Importo
		{
			get
			{
				return this._Importo;
			}
			set
			{
				if ((this._Importo != value))
				{
					this.OnImportoChanging(value);
					this.SendPropertyChanging();
					this._Importo = value;
					this.SendPropertyChanged("Importo");
					this.OnImportoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroRate", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> NumeroRate
		{
			get
			{
				return this._NumeroRate;
			}
			set
			{
				if ((this._NumeroRate != value))
				{
					this.OnNumeroRateChanging(value);
					this.SendPropertyChanging();
					this._NumeroRate = value;
					this.SendPropertyChanged("NumeroRate");
					this.OnNumeroRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anticipo", DbType="Decimal(4,0)")]
		public System.Nullable<decimal> Anticipo
		{
			get
			{
				return this._Anticipo;
			}
			set
			{
				if ((this._Anticipo != value))
				{
					this.OnAnticipoChanging(value);
					this.SendPropertyChanging();
					this._Anticipo = value;
					this.SendPropertyChanged("Anticipo");
					this.OnAnticipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAGAMENTI_PRENOTAZIONI", Storage="_PRENOTAZIONIs", ThisKey="CodTransazione", OtherKey="CodTransazione")]
		public EntitySet<PRENOTAZIONI> PRENOTAZIONIs
		{
			get
			{
				return this._PRENOTAZIONIs;
			}
			set
			{
				this._PRENOTAZIONIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAGAMENTI_RATE", Storage="_RATEs", ThisKey="CodTransazione", OtherKey="CodTransazione")]
		public EntitySet<RATE> RATEs
		{
			get
			{
				return this._RATEs;
			}
			set
			{
				this._RATEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRENOTAZIONIs(PRENOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.PAGAMENTI = this;
		}
		
		private void detach_PRENOTAZIONIs(PRENOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.PAGAMENTI = null;
		}
		
		private void attach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.PAGAMENTI = this;
		}
		
		private void detach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.PAGAMENTI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PASSEGGERI")]
	public partial class PASSEGGERI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceFiscale;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _Nazionalità;
		
		private string _Passaporto;
		
		private EntitySet<BADGE> _BADGEs;
		
		private EntitySet<PRENOTAZIONI_PASSEGGERI> _PRENOTAZIONI_PASSEGGERIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnNazionalitàChanging(string value);
    partial void OnNazionalitàChanged();
    partial void OnPassaportoChanging(string value);
    partial void OnPassaportoChanged();
    #endregion
		
		public PASSEGGERI()
		{
			this._BADGEs = new EntitySet<BADGE>(new Action<BADGE>(this.attach_BADGEs), new Action<BADGE>(this.detach_BADGEs));
			this._PRENOTAZIONI_PASSEGGERIs = new EntitySet<PRENOTAZIONI_PASSEGGERI>(new Action<PRENOTAZIONI_PASSEGGERI>(this.attach_PRENOTAZIONI_PASSEGGERIs), new Action<PRENOTAZIONI_PASSEGGERI>(this.detach_PRENOTAZIONI_PASSEGGERIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazionalità", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Nazionalità
		{
			get
			{
				return this._Nazionalità;
			}
			set
			{
				if ((this._Nazionalità != value))
				{
					this.OnNazionalitàChanging(value);
					this.SendPropertyChanging();
					this._Nazionalità = value;
					this.SendPropertyChanged("Nazionalità");
					this.OnNazionalitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passaporto", DbType="Char(9) NOT NULL", CanBeNull=false)]
		public string Passaporto
		{
			get
			{
				return this._Passaporto;
			}
			set
			{
				if ((this._Passaporto != value))
				{
					this.OnPassaportoChanging(value);
					this.SendPropertyChanging();
					this._Passaporto = value;
					this.SendPropertyChanged("Passaporto");
					this.OnPassaportoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PASSEGGERI_BADGE", Storage="_BADGEs", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale")]
		public EntitySet<BADGE> BADGEs
		{
			get
			{
				return this._BADGEs;
			}
			set
			{
				this._BADGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PASSEGGERI_PRENOTAZIONI_PASSEGGERI", Storage="_PRENOTAZIONI_PASSEGGERIs", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale")]
		public EntitySet<PRENOTAZIONI_PASSEGGERI> PRENOTAZIONI_PASSEGGERIs
		{
			get
			{
				return this._PRENOTAZIONI_PASSEGGERIs;
			}
			set
			{
				this._PRENOTAZIONI_PASSEGGERIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BADGEs(BADGE entity)
		{
			this.SendPropertyChanging();
			entity.PASSEGGERI = this;
		}
		
		private void detach_BADGEs(BADGE entity)
		{
			this.SendPropertyChanging();
			entity.PASSEGGERI = null;
		}
		
		private void attach_PRENOTAZIONI_PASSEGGERIs(PRENOTAZIONI_PASSEGGERI entity)
		{
			this.SendPropertyChanging();
			entity.PASSEGGERI = this;
		}
		
		private void detach_PRENOTAZIONI_PASSEGGERIs(PRENOTAZIONI_PASSEGGERI entity)
		{
			this.SendPropertyChanging();
			entity.PASSEGGERI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERCORSI")]
	public partial class PERCORSI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodPercorso;
		
		private string _NomeNave;
		
		private decimal _GiorniDurata;
		
		private EntitySet<NAVIGAZIONI> _NAVIGAZIONIs;
		
		private EntitySet<SEQUENZE_TRATTE> _SEQUENZE_TRATTEs;
		
		private EntityRef<NAVI> _NAVI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPercorsoChanging(string value);
    partial void OnCodPercorsoChanged();
    partial void OnNomeNaveChanging(string value);
    partial void OnNomeNaveChanged();
    partial void OnGiorniDurataChanging(decimal value);
    partial void OnGiorniDurataChanged();
    #endregion
		
		public PERCORSI()
		{
			this._NAVIGAZIONIs = new EntitySet<NAVIGAZIONI>(new Action<NAVIGAZIONI>(this.attach_NAVIGAZIONIs), new Action<NAVIGAZIONI>(this.detach_NAVIGAZIONIs));
			this._SEQUENZE_TRATTEs = new EntitySet<SEQUENZE_TRATTE>(new Action<SEQUENZE_TRATTE>(this.attach_SEQUENZE_TRATTEs), new Action<SEQUENZE_TRATTE>(this.detach_SEQUENZE_TRATTEs));
			this._NAVI = default(EntityRef<NAVI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPercorso", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPercorso
		{
			get
			{
				return this._CodPercorso;
			}
			set
			{
				if ((this._CodPercorso != value))
				{
					this.OnCodPercorsoChanging(value);
					this.SendPropertyChanging();
					this._CodPercorso = value;
					this.SendPropertyChanged("CodPercorso");
					this.OnCodPercorsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeNave", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomeNave
		{
			get
			{
				return this._NomeNave;
			}
			set
			{
				if ((this._NomeNave != value))
				{
					if (this._NAVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeNaveChanging(value);
					this.SendPropertyChanging();
					this._NomeNave = value;
					this.SendPropertyChanged("NomeNave");
					this.OnNomeNaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiorniDurata", DbType="Decimal(2,0) NOT NULL")]
		public decimal GiorniDurata
		{
			get
			{
				return this._GiorniDurata;
			}
			set
			{
				if ((this._GiorniDurata != value))
				{
					this.OnGiorniDurataChanging(value);
					this.SendPropertyChanging();
					this._GiorniDurata = value;
					this.SendPropertyChanged("GiorniDurata");
					this.OnGiorniDurataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERCORSI_NAVIGAZIONI", Storage="_NAVIGAZIONIs", ThisKey="CodPercorso", OtherKey="CodPercorso")]
		public EntitySet<NAVIGAZIONI> NAVIGAZIONIs
		{
			get
			{
				return this._NAVIGAZIONIs;
			}
			set
			{
				this._NAVIGAZIONIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERCORSI_SEQUENZE_TRATTE", Storage="_SEQUENZE_TRATTEs", ThisKey="CodPercorso", OtherKey="CodPercorso")]
		public EntitySet<SEQUENZE_TRATTE> SEQUENZE_TRATTEs
		{
			get
			{
				return this._SEQUENZE_TRATTEs;
			}
			set
			{
				this._SEQUENZE_TRATTEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVI_PERCORSI", Storage="_NAVI", ThisKey="NomeNave", OtherKey="Nome", IsForeignKey=true)]
		public NAVI NAVI
		{
			get
			{
				return this._NAVI.Entity;
			}
			set
			{
				NAVI previousValue = this._NAVI.Entity;
				if (((previousValue != value) 
							|| (this._NAVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAVI.Entity = null;
						previousValue.PERCORSIs.Remove(this);
					}
					this._NAVI.Entity = value;
					if ((value != null))
					{
						value.PERCORSIs.Add(this);
						this._NomeNave = value.Nome;
					}
					else
					{
						this._NomeNave = default(string);
					}
					this.SendPropertyChanged("NAVI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NAVIGAZIONIs(NAVIGAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.PERCORSI = this;
		}
		
		private void detach_NAVIGAZIONIs(NAVIGAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.PERCORSI = null;
		}
		
		private void attach_SEQUENZE_TRATTEs(SEQUENZE_TRATTE entity)
		{
			this.SendPropertyChanging();
			entity.PERCORSI = this;
		}
		
		private void detach_SEQUENZE_TRATTEs(SEQUENZE_TRATTE entity)
		{
			this.SendPropertyChanging();
			entity.PERCORSI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSONALE")]
	public partial class PERSONALE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceFiscale;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _Nazionalità;
		
		private string _Passaporto;
		
		private decimal _Recapito;
		
		private decimal _StipendioAnnuo;
		
		private System.Nullable<decimal> _AnzianitàServizio;
		
		private string _Grado;
		
		private string _CodRuolo;
		
		private EntitySet<TURNI_LAVORATIVI> _TURNI_LAVORATIVIs;
		
		private EntitySet<RESPONSABILITÀ> _RESPONSABILITÀs;
		
		private EntitySet<SERVIZI> _SERVIZIs;
		
		private EntityRef<RUOLI> _RUOLI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnNazionalitàChanging(string value);
    partial void OnNazionalitàChanged();
    partial void OnPassaportoChanging(string value);
    partial void OnPassaportoChanged();
    partial void OnRecapitoChanging(decimal value);
    partial void OnRecapitoChanged();
    partial void OnStipendioAnnuoChanging(decimal value);
    partial void OnStipendioAnnuoChanged();
    partial void OnAnzianitàServizioChanging(System.Nullable<decimal> value);
    partial void OnAnzianitàServizioChanged();
    partial void OnGradoChanging(string value);
    partial void OnGradoChanged();
    partial void OnCodRuoloChanging(string value);
    partial void OnCodRuoloChanged();
    #endregion
		
		public PERSONALE()
		{
			this._TURNI_LAVORATIVIs = new EntitySet<TURNI_LAVORATIVI>(new Action<TURNI_LAVORATIVI>(this.attach_TURNI_LAVORATIVIs), new Action<TURNI_LAVORATIVI>(this.detach_TURNI_LAVORATIVIs));
			this._RESPONSABILITÀs = new EntitySet<RESPONSABILITÀ>(new Action<RESPONSABILITÀ>(this.attach_RESPONSABILITÀs), new Action<RESPONSABILITÀ>(this.detach_RESPONSABILITÀs));
			this._SERVIZIs = new EntitySet<SERVIZI>(new Action<SERVIZI>(this.attach_SERVIZIs), new Action<SERVIZI>(this.detach_SERVIZIs));
			this._RUOLI = default(EntityRef<RUOLI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazionalità", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Nazionalità
		{
			get
			{
				return this._Nazionalità;
			}
			set
			{
				if ((this._Nazionalità != value))
				{
					this.OnNazionalitàChanging(value);
					this.SendPropertyChanging();
					this._Nazionalità = value;
					this.SendPropertyChanged("Nazionalità");
					this.OnNazionalitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passaporto", DbType="Char(9) NOT NULL", CanBeNull=false)]
		public string Passaporto
		{
			get
			{
				return this._Passaporto;
			}
			set
			{
				if ((this._Passaporto != value))
				{
					this.OnPassaportoChanging(value);
					this.SendPropertyChanging();
					this._Passaporto = value;
					this.SendPropertyChanged("Passaporto");
					this.OnPassaportoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recapito", DbType="Decimal(14,0) NOT NULL")]
		public decimal Recapito
		{
			get
			{
				return this._Recapito;
			}
			set
			{
				if ((this._Recapito != value))
				{
					this.OnRecapitoChanging(value);
					this.SendPropertyChanging();
					this._Recapito = value;
					this.SendPropertyChanged("Recapito");
					this.OnRecapitoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StipendioAnnuo", DbType="Decimal(6,0) NOT NULL")]
		public decimal StipendioAnnuo
		{
			get
			{
				return this._StipendioAnnuo;
			}
			set
			{
				if ((this._StipendioAnnuo != value))
				{
					this.OnStipendioAnnuoChanging(value);
					this.SendPropertyChanging();
					this._StipendioAnnuo = value;
					this.SendPropertyChanged("StipendioAnnuo");
					this.OnStipendioAnnuoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnzianitàServizio", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> AnzianitàServizio
		{
			get
			{
				return this._AnzianitàServizio;
			}
			set
			{
				if ((this._AnzianitàServizio != value))
				{
					this.OnAnzianitàServizioChanging(value);
					this.SendPropertyChanging();
					this._AnzianitàServizio = value;
					this.SendPropertyChanged("AnzianitàServizio");
					this.OnAnzianitàServizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grado", DbType="VarChar(20)")]
		public string Grado
		{
			get
			{
				return this._Grado;
			}
			set
			{
				if ((this._Grado != value))
				{
					this.OnGradoChanging(value);
					this.SendPropertyChanging();
					this._Grado = value;
					this.SendPropertyChanged("Grado");
					this.OnGradoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodRuolo", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string CodRuolo
		{
			get
			{
				return this._CodRuolo;
			}
			set
			{
				if ((this._CodRuolo != value))
				{
					if (this._RUOLI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodRuoloChanging(value);
					this.SendPropertyChanging();
					this._CodRuolo = value;
					this.SendPropertyChanged("CodRuolo");
					this.OnCodRuoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONALE_TURNI_LAVORATIVI", Storage="_TURNI_LAVORATIVIs", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale")]
		public EntitySet<TURNI_LAVORATIVI> TURNI_LAVORATIVIs
		{
			get
			{
				return this._TURNI_LAVORATIVIs;
			}
			set
			{
				this._TURNI_LAVORATIVIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONALE_RESPONSABILITÀ", Storage="_RESPONSABILITÀs", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale")]
		public EntitySet<RESPONSABILITÀ> RESPONSABILITÀs
		{
			get
			{
				return this._RESPONSABILITÀs;
			}
			set
			{
				this._RESPONSABILITÀs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONALE_SERVIZI", Storage="_SERVIZIs", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale")]
		public EntitySet<SERVIZI> SERVIZIs
		{
			get
			{
				return this._SERVIZIs;
			}
			set
			{
				this._SERVIZIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RUOLI_PERSONALE", Storage="_RUOLI", ThisKey="CodRuolo", OtherKey="CodRuolo", IsForeignKey=true)]
		public RUOLI RUOLI
		{
			get
			{
				return this._RUOLI.Entity;
			}
			set
			{
				RUOLI previousValue = this._RUOLI.Entity;
				if (((previousValue != value) 
							|| (this._RUOLI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RUOLI.Entity = null;
						previousValue.PERSONALEs.Remove(this);
					}
					this._RUOLI.Entity = value;
					if ((value != null))
					{
						value.PERSONALEs.Add(this);
						this._CodRuolo = value.CodRuolo;
					}
					else
					{
						this._CodRuolo = default(string);
					}
					this.SendPropertyChanged("RUOLI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TURNI_LAVORATIVIs(TURNI_LAVORATIVI entity)
		{
			this.SendPropertyChanging();
			entity.PERSONALE = this;
		}
		
		private void detach_TURNI_LAVORATIVIs(TURNI_LAVORATIVI entity)
		{
			this.SendPropertyChanging();
			entity.PERSONALE = null;
		}
		
		private void attach_RESPONSABILITÀs(RESPONSABILITÀ entity)
		{
			this.SendPropertyChanging();
			entity.PERSONALE = this;
		}
		
		private void detach_RESPONSABILITÀs(RESPONSABILITÀ entity)
		{
			this.SendPropertyChanging();
			entity.PERSONALE = null;
		}
		
		private void attach_SERVIZIs(SERVIZI entity)
		{
			this.SendPropertyChanging();
			entity.PERSONALE = this;
		}
		
		private void detach_SERVIZIs(SERVIZI entity)
		{
			this.SendPropertyChanging();
			entity.PERSONALE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PONTI")]
	public partial class PONTI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NomeNave;
		
		private decimal _Numero;
		
		private EntitySet<CABINE> _CABINEs;
		
		private EntitySet<SALE> _SALEs;
		
		private EntityRef<NAVI> _NAVI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeNaveChanging(string value);
    partial void OnNomeNaveChanged();
    partial void OnNumeroChanging(decimal value);
    partial void OnNumeroChanged();
    #endregion
		
		public PONTI()
		{
			this._CABINEs = new EntitySet<CABINE>(new Action<CABINE>(this.attach_CABINEs), new Action<CABINE>(this.detach_CABINEs));
			this._SALEs = new EntitySet<SALE>(new Action<SALE>(this.attach_SALEs), new Action<SALE>(this.detach_SALEs));
			this._NAVI = default(EntityRef<NAVI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeNave", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NomeNave
		{
			get
			{
				return this._NomeNave;
			}
			set
			{
				if ((this._NomeNave != value))
				{
					if (this._NAVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeNaveChanging(value);
					this.SendPropertyChanging();
					this._NomeNave = value;
					this.SendPropertyChanged("NomeNave");
					this.OnNomeNaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Decimal(2,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PONTI_CABINE", Storage="_CABINEs", ThisKey="NomeNave,Numero", OtherKey="NomeNave,NumeroPonte")]
		public EntitySet<CABINE> CABINEs
		{
			get
			{
				return this._CABINEs;
			}
			set
			{
				this._CABINEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PONTI_SALE", Storage="_SALEs", ThisKey="NomeNave,Numero", OtherKey="NomeNave,NumeroPonte")]
		public EntitySet<SALE> SALEs
		{
			get
			{
				return this._SALEs;
			}
			set
			{
				this._SALEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVI_PONTI", Storage="_NAVI", ThisKey="NomeNave", OtherKey="Nome", IsForeignKey=true)]
		public NAVI NAVI
		{
			get
			{
				return this._NAVI.Entity;
			}
			set
			{
				NAVI previousValue = this._NAVI.Entity;
				if (((previousValue != value) 
							|| (this._NAVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAVI.Entity = null;
						previousValue.PONTIs.Remove(this);
					}
					this._NAVI.Entity = value;
					if ((value != null))
					{
						value.PONTIs.Add(this);
						this._NomeNave = value.Nome;
					}
					else
					{
						this._NomeNave = default(string);
					}
					this.SendPropertyChanged("NAVI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CABINEs(CABINE entity)
		{
			this.SendPropertyChanging();
			entity.PONTI = this;
		}
		
		private void detach_CABINEs(CABINE entity)
		{
			this.SendPropertyChanging();
			entity.PONTI = null;
		}
		
		private void attach_SALEs(SALE entity)
		{
			this.SendPropertyChanging();
			entity.PONTI = this;
		}
		
		private void detach_SALEs(SALE entity)
		{
			this.SendPropertyChanging();
			entity.PONTI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PORTI")]
	public partial class PORTI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodPorto;
		
		private string _Nazionalità;
		
		private string _Città;
		
		private decimal _PrezzoAttracco;
		
		private EntitySet<PRENOTAZIONI> _PRENOTAZIONIs;
		
		private EntitySet<TRATTE> _TRATTEs;
		
		private EntitySet<TRATTE> _TRATTEs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPortoChanging(string value);
    partial void OnCodPortoChanged();
    partial void OnNazionalitàChanging(string value);
    partial void OnNazionalitàChanged();
    partial void OnCittàChanging(string value);
    partial void OnCittàChanged();
    partial void OnPrezzoAttraccoChanging(decimal value);
    partial void OnPrezzoAttraccoChanged();
    #endregion
		
		public PORTI()
		{
			this._PRENOTAZIONIs = new EntitySet<PRENOTAZIONI>(new Action<PRENOTAZIONI>(this.attach_PRENOTAZIONIs), new Action<PRENOTAZIONI>(this.detach_PRENOTAZIONIs));
			this._TRATTEs = new EntitySet<TRATTE>(new Action<TRATTE>(this.attach_TRATTEs), new Action<TRATTE>(this.detach_TRATTEs));
			this._TRATTEs1 = new EntitySet<TRATTE>(new Action<TRATTE>(this.attach_TRATTEs1), new Action<TRATTE>(this.detach_TRATTEs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPorto", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPorto
		{
			get
			{
				return this._CodPorto;
			}
			set
			{
				if ((this._CodPorto != value))
				{
					this.OnCodPortoChanging(value);
					this.SendPropertyChanging();
					this._CodPorto = value;
					this.SendPropertyChanged("CodPorto");
					this.OnCodPortoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazionalità", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Nazionalità
		{
			get
			{
				return this._Nazionalità;
			}
			set
			{
				if ((this._Nazionalità != value))
				{
					this.OnNazionalitàChanging(value);
					this.SendPropertyChanging();
					this._Nazionalità = value;
					this.SendPropertyChanged("Nazionalità");
					this.OnNazionalitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Città", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Città
		{
			get
			{
				return this._Città;
			}
			set
			{
				if ((this._Città != value))
				{
					this.OnCittàChanging(value);
					this.SendPropertyChanging();
					this._Città = value;
					this.SendPropertyChanged("Città");
					this.OnCittàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrezzoAttracco", DbType="Decimal(4,0) NOT NULL")]
		public decimal PrezzoAttracco
		{
			get
			{
				return this._PrezzoAttracco;
			}
			set
			{
				if ((this._PrezzoAttracco != value))
				{
					this.OnPrezzoAttraccoChanging(value);
					this.SendPropertyChanging();
					this._PrezzoAttracco = value;
					this.SendPropertyChanged("PrezzoAttracco");
					this.OnPrezzoAttraccoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PORTI_PRENOTAZIONI", Storage="_PRENOTAZIONIs", ThisKey="CodPorto", OtherKey="CodPorto")]
		public EntitySet<PRENOTAZIONI> PRENOTAZIONIs
		{
			get
			{
				return this._PRENOTAZIONIs;
			}
			set
			{
				this._PRENOTAZIONIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PORTI_TRATTE", Storage="_TRATTEs", ThisKey="CodPorto", OtherKey="CodPortoArrivo")]
		public EntitySet<TRATTE> TRATTEs
		{
			get
			{
				return this._TRATTEs;
			}
			set
			{
				this._TRATTEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PORTI_TRATTE1", Storage="_TRATTEs1", ThisKey="CodPorto", OtherKey="CodPortoPartenza")]
		public EntitySet<TRATTE> TRATTEs1
		{
			get
			{
				return this._TRATTEs1;
			}
			set
			{
				this._TRATTEs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRENOTAZIONIs(PRENOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.PORTI = this;
		}
		
		private void detach_PRENOTAZIONIs(PRENOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.PORTI = null;
		}
		
		private void attach_TRATTEs(TRATTE entity)
		{
			this.SendPropertyChanging();
			entity.PORTI = this;
		}
		
		private void detach_TRATTEs(TRATTE entity)
		{
			this.SendPropertyChanging();
			entity.PORTI = null;
		}
		
		private void attach_TRATTEs1(TRATTE entity)
		{
			this.SendPropertyChanging();
			entity.PORTI1 = this;
		}
		
		private void detach_TRATTEs1(TRATTE entity)
		{
			this.SendPropertyChanging();
			entity.PORTI1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRENOTAZIONI")]
	public partial class PRENOTAZIONI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodPrenotazione;
		
		private decimal _CodTransazione;
		
		private System.DateTime _DataEffettuazione;
		
		private System.DateTime _DataOraImbarco;
		
		private System.DateTime _DataOraSbarco;
		
		private string _Trattamento;
		
		private decimal _NumeroPasseggeri;
		
		private decimal _CodNavigazione;
		
		private string _CodPorto;
		
		private EntitySet<ALLOGGI> _ALLOGGIs;
		
		private EntityRef<ANNULLAMENTI> _ANNULLAMENTI;
		
		private EntitySet<BADGE> _BADGEs;
		
		private EntitySet<PRENOTAZIONI_PASSEGGERI> _PRENOTAZIONI_PASSEGGERIs;
		
		private EntitySet<SPESE_EXTRA> _SPESE_EXTRAs;
		
		private EntitySet<TARIFFARI_PRENOTAZIONI> _TARIFFARI_PRENOTAZIONIs;
		
		private EntityRef<PORTI> _PORTI;
		
		private EntityRef<PAGAMENTI> _PAGAMENTI;
		
		private EntityRef<NAVIGAZIONI> _NAVIGAZIONI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPrenotazioneChanging(decimal value);
    partial void OnCodPrenotazioneChanged();
    partial void OnCodTransazioneChanging(decimal value);
    partial void OnCodTransazioneChanged();
    partial void OnDataEffettuazioneChanging(System.DateTime value);
    partial void OnDataEffettuazioneChanged();
    partial void OnDataOraImbarcoChanging(System.DateTime value);
    partial void OnDataOraImbarcoChanged();
    partial void OnDataOraSbarcoChanging(System.DateTime value);
    partial void OnDataOraSbarcoChanged();
    partial void OnTrattamentoChanging(string value);
    partial void OnTrattamentoChanged();
    partial void OnNumeroPasseggeriChanging(decimal value);
    partial void OnNumeroPasseggeriChanged();
    partial void OnCodNavigazioneChanging(decimal value);
    partial void OnCodNavigazioneChanged();
    partial void OnCodPortoChanging(string value);
    partial void OnCodPortoChanged();
    #endregion
		
		public PRENOTAZIONI()
		{
			this._ALLOGGIs = new EntitySet<ALLOGGI>(new Action<ALLOGGI>(this.attach_ALLOGGIs), new Action<ALLOGGI>(this.detach_ALLOGGIs));
			this._ANNULLAMENTI = default(EntityRef<ANNULLAMENTI>);
			this._BADGEs = new EntitySet<BADGE>(new Action<BADGE>(this.attach_BADGEs), new Action<BADGE>(this.detach_BADGEs));
			this._PRENOTAZIONI_PASSEGGERIs = new EntitySet<PRENOTAZIONI_PASSEGGERI>(new Action<PRENOTAZIONI_PASSEGGERI>(this.attach_PRENOTAZIONI_PASSEGGERIs), new Action<PRENOTAZIONI_PASSEGGERI>(this.detach_PRENOTAZIONI_PASSEGGERIs));
			this._SPESE_EXTRAs = new EntitySet<SPESE_EXTRA>(new Action<SPESE_EXTRA>(this.attach_SPESE_EXTRAs), new Action<SPESE_EXTRA>(this.detach_SPESE_EXTRAs));
			this._TARIFFARI_PRENOTAZIONIs = new EntitySet<TARIFFARI_PRENOTAZIONI>(new Action<TARIFFARI_PRENOTAZIONI>(this.attach_TARIFFARI_PRENOTAZIONIs), new Action<TARIFFARI_PRENOTAZIONI>(this.detach_TARIFFARI_PRENOTAZIONIs));
			this._PORTI = default(EntityRef<PORTI>);
			this._PAGAMENTI = default(EntityRef<PAGAMENTI>);
			this._NAVIGAZIONI = default(EntityRef<NAVIGAZIONI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPrenotazione", AutoSync=AutoSync.OnInsert, DbType="Decimal(5,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CodPrenotazione
		{
			get
			{
				return this._CodPrenotazione;
			}
			set
			{
				if ((this._CodPrenotazione != value))
				{
					this.OnCodPrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._CodPrenotazione = value;
					this.SendPropertyChanged("CodPrenotazione");
					this.OnCodPrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTransazione", DbType="Decimal(5,0) NOT NULL")]
		public decimal CodTransazione
		{
			get
			{
				return this._CodTransazione;
			}
			set
			{
				if ((this._CodTransazione != value))
				{
					if (this._PAGAMENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodTransazioneChanging(value);
					this.SendPropertyChanging();
					this._CodTransazione = value;
					this.SendPropertyChanged("CodTransazione");
					this.OnCodTransazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataEffettuazione", DbType="Date NOT NULL")]
		public System.DateTime DataEffettuazione
		{
			get
			{
				return this._DataEffettuazione;
			}
			set
			{
				if ((this._DataEffettuazione != value))
				{
					this.OnDataEffettuazioneChanging(value);
					this.SendPropertyChanging();
					this._DataEffettuazione = value;
					this.SendPropertyChanged("DataEffettuazione");
					this.OnDataEffettuazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOraImbarco", DbType="DateTime NOT NULL")]
		public System.DateTime DataOraImbarco
		{
			get
			{
				return this._DataOraImbarco;
			}
			set
			{
				if ((this._DataOraImbarco != value))
				{
					this.OnDataOraImbarcoChanging(value);
					this.SendPropertyChanging();
					this._DataOraImbarco = value;
					this.SendPropertyChanged("DataOraImbarco");
					this.OnDataOraImbarcoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOraSbarco", DbType="DateTime NOT NULL")]
		public System.DateTime DataOraSbarco
		{
			get
			{
				return this._DataOraSbarco;
			}
			set
			{
				if ((this._DataOraSbarco != value))
				{
					this.OnDataOraSbarcoChanging(value);
					this.SendPropertyChanging();
					this._DataOraSbarco = value;
					this.SendPropertyChanged("DataOraSbarco");
					this.OnDataOraSbarcoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trattamento", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string Trattamento
		{
			get
			{
				return this._Trattamento;
			}
			set
			{
				if ((this._Trattamento != value))
				{
					this.OnTrattamentoChanging(value);
					this.SendPropertyChanging();
					this._Trattamento = value;
					this.SendPropertyChanged("Trattamento");
					this.OnTrattamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroPasseggeri", DbType="Decimal(2,0) NOT NULL")]
		public decimal NumeroPasseggeri
		{
			get
			{
				return this._NumeroPasseggeri;
			}
			set
			{
				if ((this._NumeroPasseggeri != value))
				{
					this.OnNumeroPasseggeriChanging(value);
					this.SendPropertyChanging();
					this._NumeroPasseggeri = value;
					this.SendPropertyChanged("NumeroPasseggeri");
					this.OnNumeroPasseggeriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodNavigazione", DbType="Decimal(3,0) NOT NULL")]
		public decimal CodNavigazione
		{
			get
			{
				return this._CodNavigazione;
			}
			set
			{
				if ((this._CodNavigazione != value))
				{
					if (this._NAVIGAZIONI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodNavigazioneChanging(value);
					this.SendPropertyChanging();
					this._CodNavigazione = value;
					this.SendPropertyChanged("CodNavigazione");
					this.OnCodNavigazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPorto", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string CodPorto
		{
			get
			{
				return this._CodPorto;
			}
			set
			{
				if ((this._CodPorto != value))
				{
					if (this._PORTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPortoChanging(value);
					this.SendPropertyChanging();
					this._CodPorto = value;
					this.SendPropertyChanged("CodPorto");
					this.OnCodPortoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONI_ALLOGGI", Storage="_ALLOGGIs", ThisKey="CodPrenotazione", OtherKey="CodPrenotazione")]
		public EntitySet<ALLOGGI> ALLOGGIs
		{
			get
			{
				return this._ALLOGGIs;
			}
			set
			{
				this._ALLOGGIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONI_ANNULLAMENTI", Storage="_ANNULLAMENTI", ThisKey="CodPrenotazione", OtherKey="CodPrenotazione", IsUnique=true, IsForeignKey=false)]
		public ANNULLAMENTI ANNULLAMENTI
		{
			get
			{
				return this._ANNULLAMENTI.Entity;
			}
			set
			{
				ANNULLAMENTI previousValue = this._ANNULLAMENTI.Entity;
				if (((previousValue != value) 
							|| (this._ANNULLAMENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ANNULLAMENTI.Entity = null;
						previousValue.PRENOTAZIONI = null;
					}
					this._ANNULLAMENTI.Entity = value;
					if ((value != null))
					{
						value.PRENOTAZIONI = this;
					}
					this.SendPropertyChanged("ANNULLAMENTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONI_BADGE", Storage="_BADGEs", ThisKey="CodPrenotazione", OtherKey="CodPrenotazione")]
		public EntitySet<BADGE> BADGEs
		{
			get
			{
				return this._BADGEs;
			}
			set
			{
				this._BADGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONI_PRENOTAZIONI_PASSEGGERI", Storage="_PRENOTAZIONI_PASSEGGERIs", ThisKey="CodPrenotazione", OtherKey="CodPrenotazione")]
		public EntitySet<PRENOTAZIONI_PASSEGGERI> PRENOTAZIONI_PASSEGGERIs
		{
			get
			{
				return this._PRENOTAZIONI_PASSEGGERIs;
			}
			set
			{
				this._PRENOTAZIONI_PASSEGGERIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONI_SPESE_EXTRA", Storage="_SPESE_EXTRAs", ThisKey="CodPrenotazione", OtherKey="CodPrenotazione")]
		public EntitySet<SPESE_EXTRA> SPESE_EXTRAs
		{
			get
			{
				return this._SPESE_EXTRAs;
			}
			set
			{
				this._SPESE_EXTRAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONI_TARIFFARI_PRENOTAZIONI", Storage="_TARIFFARI_PRENOTAZIONIs", ThisKey="CodPrenotazione", OtherKey="CodPrenotazione")]
		public EntitySet<TARIFFARI_PRENOTAZIONI> TARIFFARI_PRENOTAZIONIs
		{
			get
			{
				return this._TARIFFARI_PRENOTAZIONIs;
			}
			set
			{
				this._TARIFFARI_PRENOTAZIONIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PORTI_PRENOTAZIONI", Storage="_PORTI", ThisKey="CodPorto", OtherKey="CodPorto", IsForeignKey=true)]
		public PORTI PORTI
		{
			get
			{
				return this._PORTI.Entity;
			}
			set
			{
				PORTI previousValue = this._PORTI.Entity;
				if (((previousValue != value) 
							|| (this._PORTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PORTI.Entity = null;
						previousValue.PRENOTAZIONIs.Remove(this);
					}
					this._PORTI.Entity = value;
					if ((value != null))
					{
						value.PRENOTAZIONIs.Add(this);
						this._CodPorto = value.CodPorto;
					}
					else
					{
						this._CodPorto = default(string);
					}
					this.SendPropertyChanged("PORTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAGAMENTI_PRENOTAZIONI", Storage="_PAGAMENTI", ThisKey="CodTransazione", OtherKey="CodTransazione", IsForeignKey=true)]
		public PAGAMENTI PAGAMENTI
		{
			get
			{
				return this._PAGAMENTI.Entity;
			}
			set
			{
				PAGAMENTI previousValue = this._PAGAMENTI.Entity;
				if (((previousValue != value) 
							|| (this._PAGAMENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAGAMENTI.Entity = null;
						previousValue.PRENOTAZIONIs.Remove(this);
					}
					this._PAGAMENTI.Entity = value;
					if ((value != null))
					{
						value.PRENOTAZIONIs.Add(this);
						this._CodTransazione = value.CodTransazione;
					}
					else
					{
						this._CodTransazione = default(decimal);
					}
					this.SendPropertyChanged("PAGAMENTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVIGAZIONI_PRENOTAZIONI", Storage="_NAVIGAZIONI", ThisKey="CodNavigazione", OtherKey="CodNavigazione", IsForeignKey=true)]
		public NAVIGAZIONI NAVIGAZIONI
		{
			get
			{
				return this._NAVIGAZIONI.Entity;
			}
			set
			{
				NAVIGAZIONI previousValue = this._NAVIGAZIONI.Entity;
				if (((previousValue != value) 
							|| (this._NAVIGAZIONI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAVIGAZIONI.Entity = null;
						previousValue.PRENOTAZIONIs.Remove(this);
					}
					this._NAVIGAZIONI.Entity = value;
					if ((value != null))
					{
						value.PRENOTAZIONIs.Add(this);
						this._CodNavigazione = value.CodNavigazione;
					}
					else
					{
						this._CodNavigazione = default(decimal);
					}
					this.SendPropertyChanged("NAVIGAZIONI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ALLOGGIs(ALLOGGI entity)
		{
			this.SendPropertyChanging();
			entity.PRENOTAZIONI = this;
		}
		
		private void detach_ALLOGGIs(ALLOGGI entity)
		{
			this.SendPropertyChanging();
			entity.PRENOTAZIONI = null;
		}
		
		private void attach_BADGEs(BADGE entity)
		{
			this.SendPropertyChanging();
			entity.PRENOTAZIONI = this;
		}
		
		private void detach_BADGEs(BADGE entity)
		{
			this.SendPropertyChanging();
			entity.PRENOTAZIONI = null;
		}
		
		private void attach_PRENOTAZIONI_PASSEGGERIs(PRENOTAZIONI_PASSEGGERI entity)
		{
			this.SendPropertyChanging();
			entity.PRENOTAZIONI = this;
		}
		
		private void detach_PRENOTAZIONI_PASSEGGERIs(PRENOTAZIONI_PASSEGGERI entity)
		{
			this.SendPropertyChanging();
			entity.PRENOTAZIONI = null;
		}
		
		private void attach_SPESE_EXTRAs(SPESE_EXTRA entity)
		{
			this.SendPropertyChanging();
			entity.PRENOTAZIONI = this;
		}
		
		private void detach_SPESE_EXTRAs(SPESE_EXTRA entity)
		{
			this.SendPropertyChanging();
			entity.PRENOTAZIONI = null;
		}
		
		private void attach_TARIFFARI_PRENOTAZIONIs(TARIFFARI_PRENOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.PRENOTAZIONI = this;
		}
		
		private void detach_TARIFFARI_PRENOTAZIONIs(TARIFFARI_PRENOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.PRENOTAZIONI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRENOTAZIONI_PASSEGGERI")]
	public partial class PRENOTAZIONI_PASSEGGERI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceFiscale;
		
		private decimal _CodPrenotazione;
		
		private EntityRef<PASSEGGERI> _PASSEGGERI;
		
		private EntityRef<PRENOTAZIONI> _PRENOTAZIONI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnCodPrenotazioneChanging(decimal value);
    partial void OnCodPrenotazioneChanged();
    #endregion
		
		public PRENOTAZIONI_PASSEGGERI()
		{
			this._PASSEGGERI = default(EntityRef<PASSEGGERI>);
			this._PRENOTAZIONI = default(EntityRef<PRENOTAZIONI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					if (this._PASSEGGERI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPrenotazione", DbType="Decimal(5,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodPrenotazione
		{
			get
			{
				return this._CodPrenotazione;
			}
			set
			{
				if ((this._CodPrenotazione != value))
				{
					if (this._PRENOTAZIONI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._CodPrenotazione = value;
					this.SendPropertyChanged("CodPrenotazione");
					this.OnCodPrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PASSEGGERI_PRENOTAZIONI_PASSEGGERI", Storage="_PASSEGGERI", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public PASSEGGERI PASSEGGERI
		{
			get
			{
				return this._PASSEGGERI.Entity;
			}
			set
			{
				PASSEGGERI previousValue = this._PASSEGGERI.Entity;
				if (((previousValue != value) 
							|| (this._PASSEGGERI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PASSEGGERI.Entity = null;
						previousValue.PRENOTAZIONI_PASSEGGERIs.Remove(this);
					}
					this._PASSEGGERI.Entity = value;
					if ((value != null))
					{
						value.PRENOTAZIONI_PASSEGGERIs.Add(this);
						this._CodiceFiscale = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscale = default(string);
					}
					this.SendPropertyChanged("PASSEGGERI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONI_PRENOTAZIONI_PASSEGGERI", Storage="_PRENOTAZIONI", ThisKey="CodPrenotazione", OtherKey="CodPrenotazione", IsForeignKey=true)]
		public PRENOTAZIONI PRENOTAZIONI
		{
			get
			{
				return this._PRENOTAZIONI.Entity;
			}
			set
			{
				PRENOTAZIONI previousValue = this._PRENOTAZIONI.Entity;
				if (((previousValue != value) 
							|| (this._PRENOTAZIONI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRENOTAZIONI.Entity = null;
						previousValue.PRENOTAZIONI_PASSEGGERIs.Remove(this);
					}
					this._PRENOTAZIONI.Entity = value;
					if ((value != null))
					{
						value.PRENOTAZIONI_PASSEGGERIs.Add(this);
						this._CodPrenotazione = value.CodPrenotazione;
					}
					else
					{
						this._CodPrenotazione = default(decimal);
					}
					this.SendPropertyChanged("PRENOTAZIONI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROGRAMMAZIONI")]
	public partial class PROGRAMMAZIONI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _InizioData;
		
		private System.TimeSpan _InizioOra;
		
		private decimal _CodSala;
		
		private decimal _CodAttività;
		
		private decimal _CodNavigazione;
		
		private decimal _Durata;
		
		private EntityRef<ATTIVITÀ> _ATTIVITÀ;
		
		private EntityRef<NAVIGAZIONI> _NAVIGAZIONI;
		
		private EntityRef<SALE> _SALE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInizioDataChanging(System.DateTime value);
    partial void OnInizioDataChanged();
    partial void OnInizioOraChanging(System.TimeSpan value);
    partial void OnInizioOraChanged();
    partial void OnCodSalaChanging(decimal value);
    partial void OnCodSalaChanged();
    partial void OnCodAttivitàChanging(decimal value);
    partial void OnCodAttivitàChanged();
    partial void OnCodNavigazioneChanging(decimal value);
    partial void OnCodNavigazioneChanged();
    partial void OnDurataChanging(decimal value);
    partial void OnDurataChanged();
    #endregion
		
		public PROGRAMMAZIONI()
		{
			this._ATTIVITÀ = default(EntityRef<ATTIVITÀ>);
			this._NAVIGAZIONI = default(EntityRef<NAVIGAZIONI>);
			this._SALE = default(EntityRef<SALE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InizioData", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime InizioData
		{
			get
			{
				return this._InizioData;
			}
			set
			{
				if ((this._InizioData != value))
				{
					this.OnInizioDataChanging(value);
					this.SendPropertyChanging();
					this._InizioData = value;
					this.SendPropertyChanged("InizioData");
					this.OnInizioDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InizioOra", DbType="Time NOT NULL", IsPrimaryKey=true)]
		public System.TimeSpan InizioOra
		{
			get
			{
				return this._InizioOra;
			}
			set
			{
				if ((this._InizioOra != value))
				{
					this.OnInizioOraChanging(value);
					this.SendPropertyChanging();
					this._InizioOra = value;
					this.SendPropertyChanged("InizioOra");
					this.OnInizioOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodSala", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodSala
		{
			get
			{
				return this._CodSala;
			}
			set
			{
				if ((this._CodSala != value))
				{
					if (this._SALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodSalaChanging(value);
					this.SendPropertyChanging();
					this._CodSala = value;
					this.SendPropertyChanged("CodSala");
					this.OnCodSalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodAttività", DbType="Decimal(5,0) NOT NULL")]
		public decimal CodAttività
		{
			get
			{
				return this._CodAttività;
			}
			set
			{
				if ((this._CodAttività != value))
				{
					if (this._ATTIVITÀ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodAttivitàChanging(value);
					this.SendPropertyChanging();
					this._CodAttività = value;
					this.SendPropertyChanged("CodAttività");
					this.OnCodAttivitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodNavigazione", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodNavigazione
		{
			get
			{
				return this._CodNavigazione;
			}
			set
			{
				if ((this._CodNavigazione != value))
				{
					if (this._NAVIGAZIONI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodNavigazioneChanging(value);
					this.SendPropertyChanging();
					this._CodNavigazione = value;
					this.SendPropertyChanged("CodNavigazione");
					this.OnCodNavigazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durata", DbType="Decimal(3,0) NOT NULL")]
		public decimal Durata
		{
			get
			{
				return this._Durata;
			}
			set
			{
				if ((this._Durata != value))
				{
					this.OnDurataChanging(value);
					this.SendPropertyChanging();
					this._Durata = value;
					this.SendPropertyChanged("Durata");
					this.OnDurataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ATTIVITÀ_PROGRAMMAZIONI", Storage="_ATTIVITÀ", ThisKey="CodAttività", OtherKey="CodAttività", IsForeignKey=true)]
		public ATTIVITÀ ATTIVITÀ
		{
			get
			{
				return this._ATTIVITÀ.Entity;
			}
			set
			{
				ATTIVITÀ previousValue = this._ATTIVITÀ.Entity;
				if (((previousValue != value) 
							|| (this._ATTIVITÀ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ATTIVITÀ.Entity = null;
						previousValue.PROGRAMMAZIONIs.Remove(this);
					}
					this._ATTIVITÀ.Entity = value;
					if ((value != null))
					{
						value.PROGRAMMAZIONIs.Add(this);
						this._CodAttività = value.CodAttività;
					}
					else
					{
						this._CodAttività = default(decimal);
					}
					this.SendPropertyChanged("ATTIVITÀ");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVIGAZIONI_PROGRAMMAZIONI", Storage="_NAVIGAZIONI", ThisKey="CodNavigazione", OtherKey="CodNavigazione", IsForeignKey=true)]
		public NAVIGAZIONI NAVIGAZIONI
		{
			get
			{
				return this._NAVIGAZIONI.Entity;
			}
			set
			{
				NAVIGAZIONI previousValue = this._NAVIGAZIONI.Entity;
				if (((previousValue != value) 
							|| (this._NAVIGAZIONI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAVIGAZIONI.Entity = null;
						previousValue.PROGRAMMAZIONIs.Remove(this);
					}
					this._NAVIGAZIONI.Entity = value;
					if ((value != null))
					{
						value.PROGRAMMAZIONIs.Add(this);
						this._CodNavigazione = value.CodNavigazione;
					}
					else
					{
						this._CodNavigazione = default(decimal);
					}
					this.SendPropertyChanged("NAVIGAZIONI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALE_PROGRAMMAZIONI", Storage="_SALE", ThisKey="CodSala", OtherKey="CodSala", IsForeignKey=true)]
		public SALE SALE
		{
			get
			{
				return this._SALE.Entity;
			}
			set
			{
				SALE previousValue = this._SALE.Entity;
				if (((previousValue != value) 
							|| (this._SALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SALE.Entity = null;
						previousValue.PROGRAMMAZIONIs.Remove(this);
					}
					this._SALE.Entity = value;
					if ((value != null))
					{
						value.PROGRAMMAZIONIs.Add(this);
						this._CodSala = value.CodSala;
					}
					else
					{
						this._CodSala = default(decimal);
					}
					this.SendPropertyChanged("SALE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RATE")]
	public partial class RATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DataPagamento;
		
		private decimal _Importo;
		
		private decimal _CodTransazione;
		
		private EntityRef<PAGAMENTI> _PAGAMENTI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataPagamentoChanging(System.DateTime value);
    partial void OnDataPagamentoChanged();
    partial void OnImportoChanging(decimal value);
    partial void OnImportoChanged();
    partial void OnCodTransazioneChanging(decimal value);
    partial void OnCodTransazioneChanged();
    #endregion
		
		public RATE()
		{
			this._PAGAMENTI = default(EntityRef<PAGAMENTI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPagamento", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataPagamento
		{
			get
			{
				return this._DataPagamento;
			}
			set
			{
				if ((this._DataPagamento != value))
				{
					this.OnDataPagamentoChanging(value);
					this.SendPropertyChanging();
					this._DataPagamento = value;
					this.SendPropertyChanged("DataPagamento");
					this.OnDataPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importo", DbType="Decimal(4,0) NOT NULL")]
		public decimal Importo
		{
			get
			{
				return this._Importo;
			}
			set
			{
				if ((this._Importo != value))
				{
					this.OnImportoChanging(value);
					this.SendPropertyChanging();
					this._Importo = value;
					this.SendPropertyChanged("Importo");
					this.OnImportoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTransazione", DbType="Decimal(5,0) NOT NULL")]
		public decimal CodTransazione
		{
			get
			{
				return this._CodTransazione;
			}
			set
			{
				if ((this._CodTransazione != value))
				{
					if (this._PAGAMENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodTransazioneChanging(value);
					this.SendPropertyChanging();
					this._CodTransazione = value;
					this.SendPropertyChanged("CodTransazione");
					this.OnCodTransazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAGAMENTI_RATE", Storage="_PAGAMENTI", ThisKey="CodTransazione", OtherKey="CodTransazione", IsForeignKey=true)]
		public PAGAMENTI PAGAMENTI
		{
			get
			{
				return this._PAGAMENTI.Entity;
			}
			set
			{
				PAGAMENTI previousValue = this._PAGAMENTI.Entity;
				if (((previousValue != value) 
							|| (this._PAGAMENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAGAMENTI.Entity = null;
						previousValue.RATEs.Remove(this);
					}
					this._PAGAMENTI.Entity = value;
					if ((value != null))
					{
						value.RATEs.Add(this);
						this._CodTransazione = value.CodTransazione;
					}
					else
					{
						this._CodTransazione = default(decimal);
					}
					this.SendPropertyChanged("PAGAMENTI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RESPONSABILITÀ")]
	public partial class RESPONSABILITÀ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodNavigazione;
		
		private string _CodRuolo;
		
		private string _CodiceFiscale;
		
		private EntityRef<NAVIGAZIONI> _NAVIGAZIONI;
		
		private EntityRef<PERSONALE> _PERSONALE;
		
		private EntityRef<RUOLI> _RUOLI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodNavigazioneChanging(decimal value);
    partial void OnCodNavigazioneChanged();
    partial void OnCodRuoloChanging(string value);
    partial void OnCodRuoloChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    #endregion
		
		public RESPONSABILITÀ()
		{
			this._NAVIGAZIONI = default(EntityRef<NAVIGAZIONI>);
			this._PERSONALE = default(EntityRef<PERSONALE>);
			this._RUOLI = default(EntityRef<RUOLI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodNavigazione", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodNavigazione
		{
			get
			{
				return this._CodNavigazione;
			}
			set
			{
				if ((this._CodNavigazione != value))
				{
					if (this._NAVIGAZIONI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodNavigazioneChanging(value);
					this.SendPropertyChanging();
					this._CodNavigazione = value;
					this.SendPropertyChanged("CodNavigazione");
					this.OnCodNavigazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodRuolo", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodRuolo
		{
			get
			{
				return this._CodRuolo;
			}
			set
			{
				if ((this._CodRuolo != value))
				{
					if (this._RUOLI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodRuoloChanging(value);
					this.SendPropertyChanging();
					this._CodRuolo = value;
					this.SendPropertyChanged("CodRuolo");
					this.OnCodRuoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					if (this._PERSONALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVIGAZIONI_RESPONSABILITÀ", Storage="_NAVIGAZIONI", ThisKey="CodNavigazione", OtherKey="CodNavigazione", IsForeignKey=true)]
		public NAVIGAZIONI NAVIGAZIONI
		{
			get
			{
				return this._NAVIGAZIONI.Entity;
			}
			set
			{
				NAVIGAZIONI previousValue = this._NAVIGAZIONI.Entity;
				if (((previousValue != value) 
							|| (this._NAVIGAZIONI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAVIGAZIONI.Entity = null;
						previousValue.RESPONSABILITÀs.Remove(this);
					}
					this._NAVIGAZIONI.Entity = value;
					if ((value != null))
					{
						value.RESPONSABILITÀs.Add(this);
						this._CodNavigazione = value.CodNavigazione;
					}
					else
					{
						this._CodNavigazione = default(decimal);
					}
					this.SendPropertyChanged("NAVIGAZIONI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONALE_RESPONSABILITÀ", Storage="_PERSONALE", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public PERSONALE PERSONALE
		{
			get
			{
				return this._PERSONALE.Entity;
			}
			set
			{
				PERSONALE previousValue = this._PERSONALE.Entity;
				if (((previousValue != value) 
							|| (this._PERSONALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONALE.Entity = null;
						previousValue.RESPONSABILITÀs.Remove(this);
					}
					this._PERSONALE.Entity = value;
					if ((value != null))
					{
						value.RESPONSABILITÀs.Add(this);
						this._CodiceFiscale = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscale = default(string);
					}
					this.SendPropertyChanged("PERSONALE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RUOLI_RESPONSABILITÀ", Storage="_RUOLI", ThisKey="CodRuolo", OtherKey="CodRuolo", IsForeignKey=true)]
		public RUOLI RUOLI
		{
			get
			{
				return this._RUOLI.Entity;
			}
			set
			{
				RUOLI previousValue = this._RUOLI.Entity;
				if (((previousValue != value) 
							|| (this._RUOLI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RUOLI.Entity = null;
						previousValue.RESPONSABILITÀs.Remove(this);
					}
					this._RUOLI.Entity = value;
					if ((value != null))
					{
						value.RESPONSABILITÀs.Add(this);
						this._CodRuolo = value.CodRuolo;
					}
					else
					{
						this._CodRuolo = default(string);
					}
					this.SendPropertyChanged("RUOLI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RIMBORSI")]
	public partial class RIMBORSI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodRimborso;
		
		private decimal _Preavviso_Dal;
		
		private decimal _Preavviso_Al;
		
		private decimal _PercentualeRimborso;
		
		private EntitySet<ANNULLAMENTI> _ANNULLAMENTIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodRimborsoChanging(decimal value);
    partial void OnCodRimborsoChanged();
    partial void OnPreavviso_DalChanging(decimal value);
    partial void OnPreavviso_DalChanged();
    partial void OnPreavviso_AlChanging(decimal value);
    partial void OnPreavviso_AlChanged();
    partial void OnPercentualeRimborsoChanging(decimal value);
    partial void OnPercentualeRimborsoChanged();
    #endregion
		
		public RIMBORSI()
		{
			this._ANNULLAMENTIs = new EntitySet<ANNULLAMENTI>(new Action<ANNULLAMENTI>(this.attach_ANNULLAMENTIs), new Action<ANNULLAMENTI>(this.detach_ANNULLAMENTIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodRimborso", AutoSync=AutoSync.OnInsert, DbType="Decimal(2,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CodRimborso
		{
			get
			{
				return this._CodRimborso;
			}
			set
			{
				if ((this._CodRimborso != value))
				{
					this.OnCodRimborsoChanging(value);
					this.SendPropertyChanging();
					this._CodRimborso = value;
					this.SendPropertyChanged("CodRimborso");
					this.OnCodRimborsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preavviso_Dal", DbType="Decimal(3,0) NOT NULL")]
		public decimal Preavviso_Dal
		{
			get
			{
				return this._Preavviso_Dal;
			}
			set
			{
				if ((this._Preavviso_Dal != value))
				{
					this.OnPreavviso_DalChanging(value);
					this.SendPropertyChanging();
					this._Preavviso_Dal = value;
					this.SendPropertyChanged("Preavviso_Dal");
					this.OnPreavviso_DalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preavviso_Al", DbType="Decimal(3,0) NOT NULL")]
		public decimal Preavviso_Al
		{
			get
			{
				return this._Preavviso_Al;
			}
			set
			{
				if ((this._Preavviso_Al != value))
				{
					this.OnPreavviso_AlChanging(value);
					this.SendPropertyChanging();
					this._Preavviso_Al = value;
					this.SendPropertyChanged("Preavviso_Al");
					this.OnPreavviso_AlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentualeRimborso", DbType="Decimal(3,0) NOT NULL")]
		public decimal PercentualeRimborso
		{
			get
			{
				return this._PercentualeRimborso;
			}
			set
			{
				if ((this._PercentualeRimborso != value))
				{
					this.OnPercentualeRimborsoChanging(value);
					this.SendPropertyChanging();
					this._PercentualeRimborso = value;
					this.SendPropertyChanged("PercentualeRimborso");
					this.OnPercentualeRimborsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RIMBORSI_ANNULLAMENTI", Storage="_ANNULLAMENTIs", ThisKey="CodRimborso", OtherKey="CodRimborso")]
		public EntitySet<ANNULLAMENTI> ANNULLAMENTIs
		{
			get
			{
				return this._ANNULLAMENTIs;
			}
			set
			{
				this._ANNULLAMENTIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ANNULLAMENTIs(ANNULLAMENTI entity)
		{
			this.SendPropertyChanging();
			entity.RIMBORSI = this;
		}
		
		private void detach_ANNULLAMENTIs(ANNULLAMENTI entity)
		{
			this.SendPropertyChanging();
			entity.RIMBORSI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RUOLI")]
	public partial class RUOLI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodRuolo;
		
		private string _Descrizione;
		
		private string _Nome;
		
		private EntitySet<PERSONALE> _PERSONALEs;
		
		private EntitySet<RESPONSABILITÀ> _RESPONSABILITÀs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodRuoloChanging(string value);
    partial void OnCodRuoloChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public RUOLI()
		{
			this._PERSONALEs = new EntitySet<PERSONALE>(new Action<PERSONALE>(this.attach_PERSONALEs), new Action<PERSONALE>(this.detach_PERSONALEs));
			this._RESPONSABILITÀs = new EntitySet<RESPONSABILITÀ>(new Action<RESPONSABILITÀ>(this.attach_RESPONSABILITÀs), new Action<RESPONSABILITÀ>(this.detach_RESPONSABILITÀs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodRuolo", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodRuolo
		{
			get
			{
				return this._CodRuolo;
			}
			set
			{
				if ((this._CodRuolo != value))
				{
					this.OnCodRuoloChanging(value);
					this.SendPropertyChanging();
					this._CodRuolo = value;
					this.SendPropertyChanged("CodRuolo");
					this.OnCodRuoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(200)")]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RUOLI_PERSONALE", Storage="_PERSONALEs", ThisKey="CodRuolo", OtherKey="CodRuolo")]
		public EntitySet<PERSONALE> PERSONALEs
		{
			get
			{
				return this._PERSONALEs;
			}
			set
			{
				this._PERSONALEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RUOLI_RESPONSABILITÀ", Storage="_RESPONSABILITÀs", ThisKey="CodRuolo", OtherKey="CodRuolo")]
		public EntitySet<RESPONSABILITÀ> RESPONSABILITÀs
		{
			get
			{
				return this._RESPONSABILITÀs;
			}
			set
			{
				this._RESPONSABILITÀs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PERSONALEs(PERSONALE entity)
		{
			this.SendPropertyChanging();
			entity.RUOLI = this;
		}
		
		private void detach_PERSONALEs(PERSONALE entity)
		{
			this.SendPropertyChanging();
			entity.RUOLI = null;
		}
		
		private void attach_RESPONSABILITÀs(RESPONSABILITÀ entity)
		{
			this.SendPropertyChanging();
			entity.RUOLI = this;
		}
		
		private void detach_RESPONSABILITÀs(RESPONSABILITÀ entity)
		{
			this.SendPropertyChanging();
			entity.RUOLI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SALE")]
	public partial class SALE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodSala;
		
		private string _NomeNave;
		
		private decimal _NumeroPonte;
		
		private decimal _NumeroLocale;
		
		private decimal _Capienza;
		
		private EntitySet<PROGRAMMAZIONI> _PROGRAMMAZIONIs;
		
		private EntityRef<PONTI> _PONTI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodSalaChanging(decimal value);
    partial void OnCodSalaChanged();
    partial void OnNomeNaveChanging(string value);
    partial void OnNomeNaveChanged();
    partial void OnNumeroPonteChanging(decimal value);
    partial void OnNumeroPonteChanged();
    partial void OnNumeroLocaleChanging(decimal value);
    partial void OnNumeroLocaleChanged();
    partial void OnCapienzaChanging(decimal value);
    partial void OnCapienzaChanged();
    #endregion
		
		public SALE()
		{
			this._PROGRAMMAZIONIs = new EntitySet<PROGRAMMAZIONI>(new Action<PROGRAMMAZIONI>(this.attach_PROGRAMMAZIONIs), new Action<PROGRAMMAZIONI>(this.detach_PROGRAMMAZIONIs));
			this._PONTI = default(EntityRef<PONTI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodSala", AutoSync=AutoSync.OnInsert, DbType="Decimal(3,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CodSala
		{
			get
			{
				return this._CodSala;
			}
			set
			{
				if ((this._CodSala != value))
				{
					this.OnCodSalaChanging(value);
					this.SendPropertyChanging();
					this._CodSala = value;
					this.SendPropertyChanged("CodSala");
					this.OnCodSalaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeNave", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomeNave
		{
			get
			{
				return this._NomeNave;
			}
			set
			{
				if ((this._NomeNave != value))
				{
					if (this._PONTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeNaveChanging(value);
					this.SendPropertyChanging();
					this._NomeNave = value;
					this.SendPropertyChanged("NomeNave");
					this.OnNomeNaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroPonte", DbType="Decimal(2,0) NOT NULL")]
		public decimal NumeroPonte
		{
			get
			{
				return this._NumeroPonte;
			}
			set
			{
				if ((this._NumeroPonte != value))
				{
					if (this._PONTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroPonteChanging(value);
					this.SendPropertyChanging();
					this._NumeroPonte = value;
					this.SendPropertyChanged("NumeroPonte");
					this.OnNumeroPonteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroLocale", DbType="Decimal(3,0) NOT NULL")]
		public decimal NumeroLocale
		{
			get
			{
				return this._NumeroLocale;
			}
			set
			{
				if ((this._NumeroLocale != value))
				{
					this.OnNumeroLocaleChanging(value);
					this.SendPropertyChanging();
					this._NumeroLocale = value;
					this.SendPropertyChanged("NumeroLocale");
					this.OnNumeroLocaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capienza", DbType="Decimal(4,0) NOT NULL")]
		public decimal Capienza
		{
			get
			{
				return this._Capienza;
			}
			set
			{
				if ((this._Capienza != value))
				{
					this.OnCapienzaChanging(value);
					this.SendPropertyChanging();
					this._Capienza = value;
					this.SendPropertyChanged("Capienza");
					this.OnCapienzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SALE_PROGRAMMAZIONI", Storage="_PROGRAMMAZIONIs", ThisKey="CodSala", OtherKey="CodSala")]
		public EntitySet<PROGRAMMAZIONI> PROGRAMMAZIONIs
		{
			get
			{
				return this._PROGRAMMAZIONIs;
			}
			set
			{
				this._PROGRAMMAZIONIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PONTI_SALE", Storage="_PONTI", ThisKey="NomeNave,NumeroPonte", OtherKey="NomeNave,Numero", IsForeignKey=true)]
		public PONTI PONTI
		{
			get
			{
				return this._PONTI.Entity;
			}
			set
			{
				PONTI previousValue = this._PONTI.Entity;
				if (((previousValue != value) 
							|| (this._PONTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PONTI.Entity = null;
						previousValue.SALEs.Remove(this);
					}
					this._PONTI.Entity = value;
					if ((value != null))
					{
						value.SALEs.Add(this);
						this._NomeNave = value.NomeNave;
						this._NumeroPonte = value.Numero;
					}
					else
					{
						this._NomeNave = default(string);
						this._NumeroPonte = default(decimal);
					}
					this.SendPropertyChanged("PONTI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PROGRAMMAZIONIs(PROGRAMMAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.SALE = this;
		}
		
		private void detach_PROGRAMMAZIONIs(PROGRAMMAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.SALE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCIALUPPE")]
	public partial class SCIALUPPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodScialuppa;
		
		private System.DateTime _DataRevisione;
		
		private decimal _Capienza;
		
		private string _NomeNave;
		
		private EntityRef<NAVI> _NAVI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodScialuppaChanging(decimal value);
    partial void OnCodScialuppaChanged();
    partial void OnDataRevisioneChanging(System.DateTime value);
    partial void OnDataRevisioneChanged();
    partial void OnCapienzaChanging(decimal value);
    partial void OnCapienzaChanged();
    partial void OnNomeNaveChanging(string value);
    partial void OnNomeNaveChanged();
    #endregion
		
		public SCIALUPPE()
		{
			this._NAVI = default(EntityRef<NAVI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodScialuppa", AutoSync=AutoSync.OnInsert, DbType="Decimal(3,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CodScialuppa
		{
			get
			{
				return this._CodScialuppa;
			}
			set
			{
				if ((this._CodScialuppa != value))
				{
					this.OnCodScialuppaChanging(value);
					this.SendPropertyChanging();
					this._CodScialuppa = value;
					this.SendPropertyChanged("CodScialuppa");
					this.OnCodScialuppaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataRevisione", DbType="Date NOT NULL")]
		public System.DateTime DataRevisione
		{
			get
			{
				return this._DataRevisione;
			}
			set
			{
				if ((this._DataRevisione != value))
				{
					this.OnDataRevisioneChanging(value);
					this.SendPropertyChanging();
					this._DataRevisione = value;
					this.SendPropertyChanged("DataRevisione");
					this.OnDataRevisioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capienza", DbType="Decimal(3,0) NOT NULL")]
		public decimal Capienza
		{
			get
			{
				return this._Capienza;
			}
			set
			{
				if ((this._Capienza != value))
				{
					this.OnCapienzaChanging(value);
					this.SendPropertyChanging();
					this._Capienza = value;
					this.SendPropertyChanged("Capienza");
					this.OnCapienzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeNave", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomeNave
		{
			get
			{
				return this._NomeNave;
			}
			set
			{
				if ((this._NomeNave != value))
				{
					if (this._NAVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeNaveChanging(value);
					this.SendPropertyChanging();
					this._NomeNave = value;
					this.SendPropertyChanged("NomeNave");
					this.OnNomeNaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVI_SCIALUPPE", Storage="_NAVI", ThisKey="NomeNave", OtherKey="Nome", IsForeignKey=true)]
		public NAVI NAVI
		{
			get
			{
				return this._NAVI.Entity;
			}
			set
			{
				NAVI previousValue = this._NAVI.Entity;
				if (((previousValue != value) 
							|| (this._NAVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAVI.Entity = null;
						previousValue.SCIALUPPEs.Remove(this);
					}
					this._NAVI.Entity = value;
					if ((value != null))
					{
						value.SCIALUPPEs.Add(this);
						this._NomeNave = value.Nome;
					}
					else
					{
						this._NomeNave = default(string);
					}
					this.SendPropertyChanged("NAVI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SEQUENZE_TRATTE")]
	public partial class SEQUENZE_TRATTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodPercorso;
		
		private decimal _CodTratta;
		
		private decimal _Ordine;
		
		private EntityRef<PERCORSI> _PERCORSI;
		
		private EntityRef<TRATTE> _TRATTE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPercorsoChanging(string value);
    partial void OnCodPercorsoChanged();
    partial void OnCodTrattaChanging(decimal value);
    partial void OnCodTrattaChanged();
    partial void OnOrdineChanging(decimal value);
    partial void OnOrdineChanged();
    #endregion
		
		public SEQUENZE_TRATTE()
		{
			this._PERCORSI = default(EntityRef<PERCORSI>);
			this._TRATTE = default(EntityRef<TRATTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPercorso", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPercorso
		{
			get
			{
				return this._CodPercorso;
			}
			set
			{
				if ((this._CodPercorso != value))
				{
					if (this._PERCORSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPercorsoChanging(value);
					this.SendPropertyChanging();
					this._CodPercorso = value;
					this.SendPropertyChanged("CodPercorso");
					this.OnCodPercorsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTratta", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodTratta
		{
			get
			{
				return this._CodTratta;
			}
			set
			{
				if ((this._CodTratta != value))
				{
					if (this._TRATTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodTrattaChanging(value);
					this.SendPropertyChanging();
					this._CodTratta = value;
					this.SendPropertyChanged("CodTratta");
					this.OnCodTrattaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordine", DbType="Decimal(2,0) NOT NULL")]
		public decimal Ordine
		{
			get
			{
				return this._Ordine;
			}
			set
			{
				if ((this._Ordine != value))
				{
					this.OnOrdineChanging(value);
					this.SendPropertyChanging();
					this._Ordine = value;
					this.SendPropertyChanged("Ordine");
					this.OnOrdineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERCORSI_SEQUENZE_TRATTE", Storage="_PERCORSI", ThisKey="CodPercorso", OtherKey="CodPercorso", IsForeignKey=true)]
		public PERCORSI PERCORSI
		{
			get
			{
				return this._PERCORSI.Entity;
			}
			set
			{
				PERCORSI previousValue = this._PERCORSI.Entity;
				if (((previousValue != value) 
							|| (this._PERCORSI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERCORSI.Entity = null;
						previousValue.SEQUENZE_TRATTEs.Remove(this);
					}
					this._PERCORSI.Entity = value;
					if ((value != null))
					{
						value.SEQUENZE_TRATTEs.Add(this);
						this._CodPercorso = value.CodPercorso;
					}
					else
					{
						this._CodPercorso = default(string);
					}
					this.SendPropertyChanged("PERCORSI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRATTE_SEQUENZE_TRATTE", Storage="_TRATTE", ThisKey="CodTratta", OtherKey="CodTratta", IsForeignKey=true)]
		public TRATTE TRATTE
		{
			get
			{
				return this._TRATTE.Entity;
			}
			set
			{
				TRATTE previousValue = this._TRATTE.Entity;
				if (((previousValue != value) 
							|| (this._TRATTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRATTE.Entity = null;
						previousValue.SEQUENZE_TRATTEs.Remove(this);
					}
					this._TRATTE.Entity = value;
					if ((value != null))
					{
						value.SEQUENZE_TRATTEs.Add(this);
						this._CodTratta = value.CodTratta;
					}
					else
					{
						this._CodTratta = default(decimal);
					}
					this.SendPropertyChanged("TRATTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SERVIZI")]
	public partial class SERVIZI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodNavigazione;
		
		private string _CodiceFiscale;
		
		private EntityRef<NAVIGAZIONI> _NAVIGAZIONI;
		
		private EntityRef<PERSONALE> _PERSONALE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodNavigazioneChanging(decimal value);
    partial void OnCodNavigazioneChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    #endregion
		
		public SERVIZI()
		{
			this._NAVIGAZIONI = default(EntityRef<NAVIGAZIONI>);
			this._PERSONALE = default(EntityRef<PERSONALE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodNavigazione", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodNavigazione
		{
			get
			{
				return this._CodNavigazione;
			}
			set
			{
				if ((this._CodNavigazione != value))
				{
					if (this._NAVIGAZIONI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodNavigazioneChanging(value);
					this.SendPropertyChanging();
					this._CodNavigazione = value;
					this.SendPropertyChanged("CodNavigazione");
					this.OnCodNavigazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					if (this._PERSONALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVIGAZIONI_SERVIZI", Storage="_NAVIGAZIONI", ThisKey="CodNavigazione", OtherKey="CodNavigazione", IsForeignKey=true)]
		public NAVIGAZIONI NAVIGAZIONI
		{
			get
			{
				return this._NAVIGAZIONI.Entity;
			}
			set
			{
				NAVIGAZIONI previousValue = this._NAVIGAZIONI.Entity;
				if (((previousValue != value) 
							|| (this._NAVIGAZIONI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAVIGAZIONI.Entity = null;
						previousValue.SERVIZIs.Remove(this);
					}
					this._NAVIGAZIONI.Entity = value;
					if ((value != null))
					{
						value.SERVIZIs.Add(this);
						this._CodNavigazione = value.CodNavigazione;
					}
					else
					{
						this._CodNavigazione = default(decimal);
					}
					this.SendPropertyChanged("NAVIGAZIONI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONALE_SERVIZI", Storage="_PERSONALE", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public PERSONALE PERSONALE
		{
			get
			{
				return this._PERSONALE.Entity;
			}
			set
			{
				PERSONALE previousValue = this._PERSONALE.Entity;
				if (((previousValue != value) 
							|| (this._PERSONALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONALE.Entity = null;
						previousValue.SERVIZIs.Remove(this);
					}
					this._PERSONALE.Entity = value;
					if ((value != null))
					{
						value.SERVIZIs.Add(this);
						this._CodiceFiscale = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscale = default(string);
					}
					this.SendPropertyChanged("PERSONALE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPESE_EXTRA")]
	public partial class SPESE_EXTRA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodiceSpesa;
		
		private System.DateTime _DataSpesa;
		
		private decimal _Importo;
		
		private string _Descrizione;
		
		private decimal _CodPrenotazione;
		
		private decimal _CodBadge;
		
		private EntityRef<BADGE> _BADGE;
		
		private EntityRef<PRENOTAZIONI> _PRENOTAZIONI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceSpesaChanging(decimal value);
    partial void OnCodiceSpesaChanged();
    partial void OnDataSpesaChanging(System.DateTime value);
    partial void OnDataSpesaChanged();
    partial void OnImportoChanging(decimal value);
    partial void OnImportoChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnCodPrenotazioneChanging(decimal value);
    partial void OnCodPrenotazioneChanged();
    partial void OnCodBadgeChanging(decimal value);
    partial void OnCodBadgeChanged();
    #endregion
		
		public SPESE_EXTRA()
		{
			this._BADGE = default(EntityRef<BADGE>);
			this._PRENOTAZIONI = default(EntityRef<PRENOTAZIONI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceSpesa", AutoSync=AutoSync.OnInsert, DbType="Decimal(5,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CodiceSpesa
		{
			get
			{
				return this._CodiceSpesa;
			}
			set
			{
				if ((this._CodiceSpesa != value))
				{
					this.OnCodiceSpesaChanging(value);
					this.SendPropertyChanging();
					this._CodiceSpesa = value;
					this.SendPropertyChanged("CodiceSpesa");
					this.OnCodiceSpesaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSpesa", DbType="Date NOT NULL")]
		public System.DateTime DataSpesa
		{
			get
			{
				return this._DataSpesa;
			}
			set
			{
				if ((this._DataSpesa != value))
				{
					this.OnDataSpesaChanging(value);
					this.SendPropertyChanging();
					this._DataSpesa = value;
					this.SendPropertyChanged("DataSpesa");
					this.OnDataSpesaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importo", DbType="Decimal(3,0) NOT NULL")]
		public decimal Importo
		{
			get
			{
				return this._Importo;
			}
			set
			{
				if ((this._Importo != value))
				{
					this.OnImportoChanging(value);
					this.SendPropertyChanging();
					this._Importo = value;
					this.SendPropertyChanged("Importo");
					this.OnImportoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPrenotazione", DbType="Decimal(5,0) NOT NULL")]
		public decimal CodPrenotazione
		{
			get
			{
				return this._CodPrenotazione;
			}
			set
			{
				if ((this._CodPrenotazione != value))
				{
					if (this._PRENOTAZIONI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._CodPrenotazione = value;
					this.SendPropertyChanged("CodPrenotazione");
					this.OnCodPrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodBadge", DbType="Decimal(10,0) NOT NULL")]
		public decimal CodBadge
		{
			get
			{
				return this._CodBadge;
			}
			set
			{
				if ((this._CodBadge != value))
				{
					if (this._BADGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodBadgeChanging(value);
					this.SendPropertyChanging();
					this._CodBadge = value;
					this.SendPropertyChanged("CodBadge");
					this.OnCodBadgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BADGE_SPESE_EXTRA", Storage="_BADGE", ThisKey="CodBadge", OtherKey="CodBadge", IsForeignKey=true)]
		public BADGE BADGE
		{
			get
			{
				return this._BADGE.Entity;
			}
			set
			{
				BADGE previousValue = this._BADGE.Entity;
				if (((previousValue != value) 
							|| (this._BADGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BADGE.Entity = null;
						previousValue.SPESE_EXTRAs.Remove(this);
					}
					this._BADGE.Entity = value;
					if ((value != null))
					{
						value.SPESE_EXTRAs.Add(this);
						this._CodBadge = value.CodBadge;
					}
					else
					{
						this._CodBadge = default(decimal);
					}
					this.SendPropertyChanged("BADGE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONI_SPESE_EXTRA", Storage="_PRENOTAZIONI", ThisKey="CodPrenotazione", OtherKey="CodPrenotazione", IsForeignKey=true)]
		public PRENOTAZIONI PRENOTAZIONI
		{
			get
			{
				return this._PRENOTAZIONI.Entity;
			}
			set
			{
				PRENOTAZIONI previousValue = this._PRENOTAZIONI.Entity;
				if (((previousValue != value) 
							|| (this._PRENOTAZIONI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRENOTAZIONI.Entity = null;
						previousValue.SPESE_EXTRAs.Remove(this);
					}
					this._PRENOTAZIONI.Entity = value;
					if ((value != null))
					{
						value.SPESE_EXTRAs.Add(this);
						this._CodPrenotazione = value.CodPrenotazione;
					}
					else
					{
						this._CodPrenotazione = default(decimal);
					}
					this.SendPropertyChanged("PRENOTAZIONI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TARIFFARI")]
	public partial class TARIFFARI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodTariffario;
		
		private string _NomeNave;
		
		private string _NomeTipologia;
		
		private System.DateTime _DataInizio;
		
		private System.DateTime _DataFine;
		
		private decimal _Prezzo;
		
		private EntitySet<TARIFFARI_PRENOTAZIONI> _TARIFFARI_PRENOTAZIONIs;
		
		private EntityRef<NAVI> _NAVI;
		
		private EntityRef<TIPOLOGIE> _TIPOLOGIE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodTariffarioChanging(decimal value);
    partial void OnCodTariffarioChanged();
    partial void OnNomeNaveChanging(string value);
    partial void OnNomeNaveChanged();
    partial void OnNomeTipologiaChanging(string value);
    partial void OnNomeTipologiaChanged();
    partial void OnDataInizioChanging(System.DateTime value);
    partial void OnDataInizioChanged();
    partial void OnDataFineChanging(System.DateTime value);
    partial void OnDataFineChanged();
    partial void OnPrezzoChanging(decimal value);
    partial void OnPrezzoChanged();
    #endregion
		
		public TARIFFARI()
		{
			this._TARIFFARI_PRENOTAZIONIs = new EntitySet<TARIFFARI_PRENOTAZIONI>(new Action<TARIFFARI_PRENOTAZIONI>(this.attach_TARIFFARI_PRENOTAZIONIs), new Action<TARIFFARI_PRENOTAZIONI>(this.detach_TARIFFARI_PRENOTAZIONIs));
			this._NAVI = default(EntityRef<NAVI>);
			this._TIPOLOGIE = default(EntityRef<TIPOLOGIE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTariffario", AutoSync=AutoSync.OnInsert, DbType="Decimal(3,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CodTariffario
		{
			get
			{
				return this._CodTariffario;
			}
			set
			{
				if ((this._CodTariffario != value))
				{
					this.OnCodTariffarioChanging(value);
					this.SendPropertyChanging();
					this._CodTariffario = value;
					this.SendPropertyChanged("CodTariffario");
					this.OnCodTariffarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeNave", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomeNave
		{
			get
			{
				return this._NomeNave;
			}
			set
			{
				if ((this._NomeNave != value))
				{
					if (this._NAVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeNaveChanging(value);
					this.SendPropertyChanging();
					this._NomeNave = value;
					this.SendPropertyChanged("NomeNave");
					this.OnNomeNaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeTipologia", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string NomeTipologia
		{
			get
			{
				return this._NomeTipologia;
			}
			set
			{
				if ((this._NomeTipologia != value))
				{
					if (this._TIPOLOGIE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeTipologiaChanging(value);
					this.SendPropertyChanging();
					this._NomeTipologia = value;
					this.SendPropertyChanged("NomeTipologia");
					this.OnNomeTipologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizio", DbType="Date NOT NULL")]
		public System.DateTime DataInizio
		{
			get
			{
				return this._DataInizio;
			}
			set
			{
				if ((this._DataInizio != value))
				{
					this.OnDataInizioChanging(value);
					this.SendPropertyChanging();
					this._DataInizio = value;
					this.SendPropertyChanged("DataInizio");
					this.OnDataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFine", DbType="Date NOT NULL")]
		public System.DateTime DataFine
		{
			get
			{
				return this._DataFine;
			}
			set
			{
				if ((this._DataFine != value))
				{
					this.OnDataFineChanging(value);
					this.SendPropertyChanging();
					this._DataFine = value;
					this.SendPropertyChanged("DataFine");
					this.OnDataFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo", DbType="Decimal(4,0) NOT NULL")]
		public decimal Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TARIFFARI_TARIFFARI_PRENOTAZIONI", Storage="_TARIFFARI_PRENOTAZIONIs", ThisKey="CodTariffario", OtherKey="CodTariffario")]
		public EntitySet<TARIFFARI_PRENOTAZIONI> TARIFFARI_PRENOTAZIONIs
		{
			get
			{
				return this._TARIFFARI_PRENOTAZIONIs;
			}
			set
			{
				this._TARIFFARI_PRENOTAZIONIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAVI_TARIFFARI", Storage="_NAVI", ThisKey="NomeNave", OtherKey="Nome", IsForeignKey=true)]
		public NAVI NAVI
		{
			get
			{
				return this._NAVI.Entity;
			}
			set
			{
				NAVI previousValue = this._NAVI.Entity;
				if (((previousValue != value) 
							|| (this._NAVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAVI.Entity = null;
						previousValue.TARIFFARIs.Remove(this);
					}
					this._NAVI.Entity = value;
					if ((value != null))
					{
						value.TARIFFARIs.Add(this);
						this._NomeNave = value.Nome;
					}
					else
					{
						this._NomeNave = default(string);
					}
					this.SendPropertyChanged("NAVI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOLOGIE_TARIFFARI", Storage="_TIPOLOGIE", ThisKey="NomeTipologia", OtherKey="Nome", IsForeignKey=true)]
		public TIPOLOGIE TIPOLOGIE
		{
			get
			{
				return this._TIPOLOGIE.Entity;
			}
			set
			{
				TIPOLOGIE previousValue = this._TIPOLOGIE.Entity;
				if (((previousValue != value) 
							|| (this._TIPOLOGIE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOLOGIE.Entity = null;
						previousValue.TARIFFARIs.Remove(this);
					}
					this._TIPOLOGIE.Entity = value;
					if ((value != null))
					{
						value.TARIFFARIs.Add(this);
						this._NomeTipologia = value.Nome;
					}
					else
					{
						this._NomeTipologia = default(string);
					}
					this.SendPropertyChanged("TIPOLOGIE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TARIFFARI_PRENOTAZIONIs(TARIFFARI_PRENOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.TARIFFARI = this;
		}
		
		private void detach_TARIFFARI_PRENOTAZIONIs(TARIFFARI_PRENOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.TARIFFARI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TARIFFARI_PRENOTAZIONI")]
	public partial class TARIFFARI_PRENOTAZIONI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodTariffario;
		
		private decimal _CodPrenotazione;
		
		private EntityRef<PRENOTAZIONI> _PRENOTAZIONI;
		
		private EntityRef<TARIFFARI> _TARIFFARI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodTariffarioChanging(decimal value);
    partial void OnCodTariffarioChanged();
    partial void OnCodPrenotazioneChanging(decimal value);
    partial void OnCodPrenotazioneChanged();
    #endregion
		
		public TARIFFARI_PRENOTAZIONI()
		{
			this._PRENOTAZIONI = default(EntityRef<PRENOTAZIONI>);
			this._TARIFFARI = default(EntityRef<TARIFFARI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTariffario", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodTariffario
		{
			get
			{
				return this._CodTariffario;
			}
			set
			{
				if ((this._CodTariffario != value))
				{
					if (this._TARIFFARI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodTariffarioChanging(value);
					this.SendPropertyChanging();
					this._CodTariffario = value;
					this.SendPropertyChanged("CodTariffario");
					this.OnCodTariffarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPrenotazione", DbType="Decimal(5,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CodPrenotazione
		{
			get
			{
				return this._CodPrenotazione;
			}
			set
			{
				if ((this._CodPrenotazione != value))
				{
					if (this._PRENOTAZIONI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._CodPrenotazione = value;
					this.SendPropertyChanged("CodPrenotazione");
					this.OnCodPrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONI_TARIFFARI_PRENOTAZIONI", Storage="_PRENOTAZIONI", ThisKey="CodPrenotazione", OtherKey="CodPrenotazione", IsForeignKey=true)]
		public PRENOTAZIONI PRENOTAZIONI
		{
			get
			{
				return this._PRENOTAZIONI.Entity;
			}
			set
			{
				PRENOTAZIONI previousValue = this._PRENOTAZIONI.Entity;
				if (((previousValue != value) 
							|| (this._PRENOTAZIONI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRENOTAZIONI.Entity = null;
						previousValue.TARIFFARI_PRENOTAZIONIs.Remove(this);
					}
					this._PRENOTAZIONI.Entity = value;
					if ((value != null))
					{
						value.TARIFFARI_PRENOTAZIONIs.Add(this);
						this._CodPrenotazione = value.CodPrenotazione;
					}
					else
					{
						this._CodPrenotazione = default(decimal);
					}
					this.SendPropertyChanged("PRENOTAZIONI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TARIFFARI_TARIFFARI_PRENOTAZIONI", Storage="_TARIFFARI", ThisKey="CodTariffario", OtherKey="CodTariffario", IsForeignKey=true)]
		public TARIFFARI TARIFFARI
		{
			get
			{
				return this._TARIFFARI.Entity;
			}
			set
			{
				TARIFFARI previousValue = this._TARIFFARI.Entity;
				if (((previousValue != value) 
							|| (this._TARIFFARI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TARIFFARI.Entity = null;
						previousValue.TARIFFARI_PRENOTAZIONIs.Remove(this);
					}
					this._TARIFFARI.Entity = value;
					if ((value != null))
					{
						value.TARIFFARI_PRENOTAZIONIs.Add(this);
						this._CodTariffario = value.CodTariffario;
					}
					else
					{
						this._CodTariffario = default(decimal);
					}
					this.SendPropertyChanged("TARIFFARI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOLOGIE")]
	public partial class TIPOLOGIE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private decimal _Prezzo;
		
		private string _Descrizione;
		
		private EntitySet<CABINE> _CABINEs;
		
		private EntitySet<TARIFFARI> _TARIFFARIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnPrezzoChanging(decimal value);
    partial void OnPrezzoChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public TIPOLOGIE()
		{
			this._CABINEs = new EntitySet<CABINE>(new Action<CABINE>(this.attach_CABINEs), new Action<CABINE>(this.detach_CABINEs));
			this._TARIFFARIs = new EntitySet<TARIFFARI>(new Action<TARIFFARI>(this.attach_TARIFFARIs), new Action<TARIFFARI>(this.detach_TARIFFARIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo", DbType="Decimal(4,0) NOT NULL")]
		public decimal Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(100)")]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOLOGIE_CABINE", Storage="_CABINEs", ThisKey="Nome", OtherKey="NomeTipologia")]
		public EntitySet<CABINE> CABINEs
		{
			get
			{
				return this._CABINEs;
			}
			set
			{
				this._CABINEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOLOGIE_TARIFFARI", Storage="_TARIFFARIs", ThisKey="Nome", OtherKey="NomeTipologia")]
		public EntitySet<TARIFFARI> TARIFFARIs
		{
			get
			{
				return this._TARIFFARIs;
			}
			set
			{
				this._TARIFFARIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CABINEs(CABINE entity)
		{
			this.SendPropertyChanging();
			entity.TIPOLOGIE = this;
		}
		
		private void detach_CABINEs(CABINE entity)
		{
			this.SendPropertyChanging();
			entity.TIPOLOGIE = null;
		}
		
		private void attach_TARIFFARIs(TARIFFARI entity)
		{
			this.SendPropertyChanging();
			entity.TIPOLOGIE = this;
		}
		
		private void detach_TARIFFARIs(TARIFFARI entity)
		{
			this.SendPropertyChanging();
			entity.TIPOLOGIE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRATTE")]
	public partial class TRATTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CodTratta;
		
		private string _CodPortoArrivo;
		
		private string _CodPortoPartenza;
		
		private EntitySet<ESECUZIONI_TRATTA> _ESECUZIONI_TRATTAs;
		
		private EntitySet<SEQUENZE_TRATTE> _SEQUENZE_TRATTEs;
		
		private EntityRef<PORTI> _PORTI;
		
		private EntityRef<PORTI> _PORTI1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodTrattaChanging(decimal value);
    partial void OnCodTrattaChanged();
    partial void OnCodPortoArrivoChanging(string value);
    partial void OnCodPortoArrivoChanged();
    partial void OnCodPortoPartenzaChanging(string value);
    partial void OnCodPortoPartenzaChanged();
    #endregion
		
		public TRATTE()
		{
			this._ESECUZIONI_TRATTAs = new EntitySet<ESECUZIONI_TRATTA>(new Action<ESECUZIONI_TRATTA>(this.attach_ESECUZIONI_TRATTAs), new Action<ESECUZIONI_TRATTA>(this.detach_ESECUZIONI_TRATTAs));
			this._SEQUENZE_TRATTEs = new EntitySet<SEQUENZE_TRATTE>(new Action<SEQUENZE_TRATTE>(this.attach_SEQUENZE_TRATTEs), new Action<SEQUENZE_TRATTE>(this.detach_SEQUENZE_TRATTEs));
			this._PORTI = default(EntityRef<PORTI>);
			this._PORTI1 = default(EntityRef<PORTI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTratta", AutoSync=AutoSync.OnInsert, DbType="Decimal(3,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal CodTratta
		{
			get
			{
				return this._CodTratta;
			}
			set
			{
				if ((this._CodTratta != value))
				{
					this.OnCodTrattaChanging(value);
					this.SendPropertyChanging();
					this._CodTratta = value;
					this.SendPropertyChanged("CodTratta");
					this.OnCodTrattaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPortoArrivo", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string CodPortoArrivo
		{
			get
			{
				return this._CodPortoArrivo;
			}
			set
			{
				if ((this._CodPortoArrivo != value))
				{
					if (this._PORTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPortoArrivoChanging(value);
					this.SendPropertyChanging();
					this._CodPortoArrivo = value;
					this.SendPropertyChanged("CodPortoArrivo");
					this.OnCodPortoArrivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPortoPartenza", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string CodPortoPartenza
		{
			get
			{
				return this._CodPortoPartenza;
			}
			set
			{
				if ((this._CodPortoPartenza != value))
				{
					if (this._PORTI1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPortoPartenzaChanging(value);
					this.SendPropertyChanging();
					this._CodPortoPartenza = value;
					this.SendPropertyChanged("CodPortoPartenza");
					this.OnCodPortoPartenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRATTE_ESECUZIONI_TRATTA", Storage="_ESECUZIONI_TRATTAs", ThisKey="CodTratta", OtherKey="CodTratta")]
		public EntitySet<ESECUZIONI_TRATTA> ESECUZIONI_TRATTAs
		{
			get
			{
				return this._ESECUZIONI_TRATTAs;
			}
			set
			{
				this._ESECUZIONI_TRATTAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRATTE_SEQUENZE_TRATTE", Storage="_SEQUENZE_TRATTEs", ThisKey="CodTratta", OtherKey="CodTratta")]
		public EntitySet<SEQUENZE_TRATTE> SEQUENZE_TRATTEs
		{
			get
			{
				return this._SEQUENZE_TRATTEs;
			}
			set
			{
				this._SEQUENZE_TRATTEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PORTI_TRATTE", Storage="_PORTI", ThisKey="CodPortoArrivo", OtherKey="CodPorto", IsForeignKey=true)]
		public PORTI PORTI
		{
			get
			{
				return this._PORTI.Entity;
			}
			set
			{
				PORTI previousValue = this._PORTI.Entity;
				if (((previousValue != value) 
							|| (this._PORTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PORTI.Entity = null;
						previousValue.TRATTEs.Remove(this);
					}
					this._PORTI.Entity = value;
					if ((value != null))
					{
						value.TRATTEs.Add(this);
						this._CodPortoArrivo = value.CodPorto;
					}
					else
					{
						this._CodPortoArrivo = default(string);
					}
					this.SendPropertyChanged("PORTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PORTI_TRATTE1", Storage="_PORTI1", ThisKey="CodPortoPartenza", OtherKey="CodPorto", IsForeignKey=true)]
		public PORTI PORTI1
		{
			get
			{
				return this._PORTI1.Entity;
			}
			set
			{
				PORTI previousValue = this._PORTI1.Entity;
				if (((previousValue != value) 
							|| (this._PORTI1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PORTI1.Entity = null;
						previousValue.TRATTEs1.Remove(this);
					}
					this._PORTI1.Entity = value;
					if ((value != null))
					{
						value.TRATTEs1.Add(this);
						this._CodPortoPartenza = value.CodPorto;
					}
					else
					{
						this._CodPortoPartenza = default(string);
					}
					this.SendPropertyChanged("PORTI1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ESECUZIONI_TRATTAs(ESECUZIONI_TRATTA entity)
		{
			this.SendPropertyChanging();
			entity.TRATTE = this;
		}
		
		private void detach_ESECUZIONI_TRATTAs(ESECUZIONI_TRATTA entity)
		{
			this.SendPropertyChanging();
			entity.TRATTE = null;
		}
		
		private void attach_SEQUENZE_TRATTEs(SEQUENZE_TRATTE entity)
		{
			this.SendPropertyChanging();
			entity.TRATTE = this;
		}
		
		private void detach_SEQUENZE_TRATTEs(SEQUENZE_TRATTE entity)
		{
			this.SendPropertyChanging();
			entity.TRATTE = null;
		}
	}
}
#pragma warning restore 1591
